Index: app/src/main/java/com/example/publicdatacompetition/UploadActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition;\r\n\r\nimport android.animation.ArgbEvaluator;\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.ImageDecoder;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.DatePicker;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.content.res.AppCompatResources;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.example.publicdatacompetition.Adapter.PagerAdapter_Picture;\r\nimport com.example.publicdatacompetition.Model.House;\r\nimport com.example.publicdatacompetition.Model.Pictures;\r\nimport com.example.publicdatacompetition.Model.User;\r\nimport com.google.android.material.slider.RangeSlider;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.ResponseBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class UploadActivity extends AppCompatActivity implements View.OnClickListener, PagerAdapter_Picture.OnItemClick {\r\n\r\n    private ImageView btn_back;\r\n    private AppCompatButton btn_type1, btn_type2, btn_type3, btn_no_dialog_upload, btn_okay_dialog_upload;\r\n    private LinearLayout lin_price_month;\r\n    private TextInputEditText edit_dong, edit_ho, edit_area1, edit_area2, edit_price_all, edit_price_month, edit_price_manage,\r\n            edit_introduce_short, edit_introduce_long, edit_room, edit_toilet, edit_introduce_livingroom, edit_introduce_kitchen,\r\n            edit_introduce_room1, edit_introduce_room2, edit_introduce_room3, edit_introduce_toilet1, edit_introduce_toilet2, edit_introduce_apartment;\r\n    private TextView tv_area1, tv_area2, tv_ratio1, tv_ratio2, tv_price_ratio1, tv_price_ratio2, tv_price_type, tv_price_all, tv_price_month, tv_price_manage, tv_complete, edit_apartment, tv_movedate, tv_apartaddress_load;\r\n    private RangeSlider slider_ratio1, slider_ratio2;\r\n    private CheckBox chk_nego, chk_door, chk_air, chk_ref, chk_kimchi, chk_closet, chk_oven, chk_induction, chk_airsystem, chk_movenow;\r\n    private Calendar cal;\r\n\r\n    private long price_first, price_second, price_third;\r\n\r\n    private int picture_clicked_position = 0;\r\n\r\n    private PagerAdapter_Picture pagerAdapter_picture;\r\n\r\n    private DatePickerDialog.OnDateSetListener callbackMethod;\r\n    private ViewPager viewPager;\r\n    private PagerAdapter_Picture adapter;\r\n    private List<Pictures> models;\r\n    private List<String> models_description;\r\n\r\n    House mHouse;\r\n\r\n    private static final int IMAGE_REQUEST = 0;\r\n    private static final int NAME_REQUEST = 1;\r\n    private Uri imageUri;\r\n\r\n    private String userId;//사용자 이름\r\n    private String residence_name;//아파트 이름\r\n    private String code;//아파트 코드\r\n    private String address;//도로명 주소\r\n    private String sido;//시도\r\n    private String sigungoo;//시군구\r\n    private String dongri;//동리\r\n    private String date;//사용승인일일\r\n    private String allnumber;//세대수\r\n    private String parkingnumber;//총주차대수\r\n    private String contact;//관리사무소 연락처\r\n\r\n    private Integer dong, ho;//동,호수\r\n    private Double net_leaseable_area;//전용면적\r\n    private Double leaseable_area;//공급면적\r\n\r\n    private String residence_type;//매물 타입(A,V,O)\r\n    private String sale_type;//\"월세\",\"전세\",\"매매\"\r\n    private Long sale_price;//매매가/전세금/보증금\r\n    private Long monthly_price;//월세\r\n    private Long admin_expenses;//관리비\r\n\r\n    private Integer provisional_down_pay_per;//가계약금 비율\r\n    private Integer down_pay_per;//계약금 비율\r\n    private Integer intermediate_pay_per;//중도금 비율\r\n    private Integer balance_per;//잔금 비율\r\n\r\n    private Integer room_num;//방 개수\r\n    private Integer toilet_num;//욕실 개수\r\n\r\n    private boolean middle_door;//중문\r\n    private boolean air_conditioner;//시스템 에어컨\r\n    private boolean refrigerator;//냉장고\r\n    private boolean kimchi_refrigerator;//김치냉장고\r\n    private boolean closet;//붙박이장\r\n    private boolean oven;//빌트인 오븐\r\n    private boolean induction;//인덕션\r\n    private boolean airsystem;//공조기 시스템\r\n\r\n    private boolean nego;//네고가능\r\n\r\n    private String short_description;//짧은 집 소개\r\n    private String long_description;//긴 집 소개\r\n    private String apartment_description;//아파트 소개\r\n    private String livingroom_description;//거실 소개\r\n    private String kitchen_description;//주방 소개\r\n    private String room1_description;//방1 소개\r\n    private String room2_description;//방2 소개\r\n    private String room3_description;//방3 소개\r\n    private String toilet1_description;//화장실1 소개\r\n    private String toilet2_description;//화장실2 소개\r\n\r\n    private String movedate;//입주가능일\r\n\r\n    private List<MultipartBody.Part> pictures;\r\n    private int roomcnt;\r\n    private int toiletcnt;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_upload);\r\n\r\n        init();\r\n\r\n        roomcnt = Integer.parseInt(getIntent().getStringExtra(\"roomcnt\"));\r\n        toiletcnt = Integer.parseInt(getIntent().getStringExtra(\"toiletcnt\"));\r\n        models = new ArrayList<>();\r\n        models.add(new Pictures(\"아파트 외관 사진을 등록해주세요\", R.drawable.image_apartment,\"위치, 주변 시설, 아파트 정원 등등 상세하게 적어주세요\",\"아파트 소개\"));\r\n        models.add(new Pictures(\"현관 사진을 등록해주세요\", R.drawable.image_frontdoor, \"현관 크기, 확장 여부, 신발장 공간 등등 상세하게 적어주세요\",\"현관 소개\"));\r\n        models.add(new Pictures(\"거실 사진을 등록해주세요\", R.drawable.image_livingroom, \"베란다 확장 여부, 방향, 바닥재질 등등 상세하게 적어주세요\",\"거실 소개\"));\r\n        models.add(new Pictures(\"주방 사진을 등록해주세요\", R.drawable.image_kitchen, \"수납공간, 식탁 여부, 인테리어 등등 상세하게 적어주세요\",\"주방 소개\"));\r\n        for (int i =1; i<=roomcnt; i++) {\r\n            models.add(new Pictures(i + \"번 방\" + \" 사진을 등록해주세요\", R.drawable.image_room4, \"채광이나 방향, 벽지 상태 등등 상세하게 적어주세요\",i+\"번 방 소개\"));\r\n        }\r\n        for (int i=1; i<=toiletcnt; i++) {\r\n            models.add(new Pictures(i + \"번 화장실\" + \" 사진을 등록해주세요\", R.drawable.image_toilet1, \"수압, 환풍기 상태, 습식/건식 여부 등등 상세하게 적어주세요\",i+\"번 화장실 소개\"));\r\n        }\r\n\r\n        pagerAdapter_picture = new PagerAdapter_Picture();\r\n\r\n        adapter = new PagerAdapter_Picture(models, this, this);\r\n\r\n        viewPager = findViewById(R.id.viewPager_upload_picture);\r\n        int dpValue = 54;\r\n        float d = getResources().getDisplayMetrics().density;\r\n        int margin = (int) (dpValue * d);\r\n        viewPager.setClipToPadding(false);\r\n        viewPager.setPadding(margin, 0, margin, 0);\r\n        viewPager.setPageMargin(margin / 3);\r\n\r\n        viewPager.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    private void init() {\r\n\r\n        cal = Calendar.getInstance();\r\n\r\n        btn_back = findViewById(R.id.btn_back_upload);\r\n\r\n        btn_type1 = findViewById(R.id.btn_type1);\r\n        btn_type2 = findViewById(R.id.btn_type2);\r\n        btn_type3 = findViewById(R.id.btn_type3);\r\n\r\n        lin_price_month = findViewById(R.id.lin_price_month);\r\n\r\n        edit_apartment = findViewById(R.id.edit_apartment);\r\n        edit_dong = findViewById(R.id.edit_dong);\r\n        edit_ho = findViewById(R.id.edit_ho);\r\n        edit_area1 = findViewById(R.id.edit_area1);\r\n        edit_area2 = findViewById(R.id.edit_area2);\r\n        edit_price_all = findViewById(R.id.edit_price_all);\r\n        edit_price_month = findViewById(R.id.edit_price_month);\r\n        edit_price_manage = findViewById(R.id.edit_price_manage);\r\n//        edit_room = findViewById(R.id.edit_room);\r\n//        edit_toilet = findViewById(R.id.edit_toilet);\r\n        edit_introduce_short = findViewById(R.id.edit_introduce_short);\r\n        edit_introduce_long = findViewById(R.id.edit_introduce_long);\r\n//        edit_introduce_apartment = findViewById(R.id.edit_introduce_apartment);\r\n//        edit_introduce_livingroom= findViewById(R.id.edit_introduce_livingroom);\r\n//        edit_introduce_kitchen = findViewById(R.id.edit_introduce_kitchen);\r\n//        edit_introduce_room1 = findViewById(R.id.edit_introduce_room1);\r\n//        edit_introduce_room2 = findViewById(R.id.edit_introduce_room2);\r\n//        edit_introduce_room3 = findViewById(R.id.edit_introduce_room3);\r\n//        edit_introduce_toilet1 = findViewById(R.id.edit_introduce_toilet1);\r\n//        edit_introduce_toilet2 = findViewById(R.id.edit_introduce_toilet2);\r\n\r\n        tv_area1 = findViewById(R.id.tv_area1);\r\n        tv_area2 = findViewById(R.id.tv_area2);\r\n        tv_ratio1 = findViewById(R.id.tv_ratio1);\r\n        tv_ratio2 = findViewById(R.id.tv_ratio2);\r\n        tv_price_ratio1 = findViewById(R.id.tv_price_ratio1);\r\n        tv_price_ratio2 = findViewById(R.id.tv_price_ratio2);\r\n        tv_price_type = findViewById(R.id.tv_price_type);\r\n        tv_price_all = findViewById(R.id.tv_price_all);\r\n        tv_price_month = findViewById(R.id.tv_price_month);\r\n        tv_price_manage = findViewById(R.id.tv_price_manage);\r\n        tv_complete = findViewById(R.id.tv_complete);\r\n        tv_movedate = findViewById(R.id.tv_movedate);\r\n        tv_apartaddress_load = findViewById(R.id.tv_apartaddress_load);\r\n\r\n        slider_ratio1 = findViewById(R.id.slider_ratio1);\r\n        slider_ratio2 = findViewById(R.id.slider_ratio2);\r\n\r\n        chk_nego = findViewById(R.id.chk_nego);\r\n        chk_door = findViewById(R.id.chk_door);\r\n        chk_air = findViewById(R.id.chk_air);\r\n        chk_ref = findViewById(R.id.chk_ref);\r\n        chk_kimchi = findViewById(R.id.chk_kimchi);\r\n        chk_closet = findViewById(R.id.chk_closet);\r\n        chk_oven = findViewById(R.id.chk_oven);\r\n        chk_induction = findViewById(R.id.chk_induction);\r\n        chk_airsystem = findViewById(R.id.chk_airsystem);\r\n        chk_movenow = findViewById(R.id.chk_movenow);\r\n\r\n        btn_back.setOnClickListener(this);\r\n        btn_type1.setOnClickListener(this);\r\n        btn_type2.setOnClickListener(this);\r\n        btn_type3.setOnClickListener(this);\r\n        chk_nego.setOnClickListener(this);\r\n        chk_door.setOnClickListener(this);\r\n        chk_air.setOnClickListener(this);\r\n        chk_ref.setOnClickListener(this);\r\n        chk_kimchi.setOnClickListener(this);\r\n        chk_closet.setOnClickListener(this);\r\n        chk_oven.setOnClickListener(this);\r\n        chk_induction.setOnClickListener(this);\r\n        chk_airsystem.setOnClickListener(this);\r\n        chk_movenow.setOnClickListener(this);\r\n        tv_complete.setOnClickListener(this);\r\n        edit_apartment.setOnClickListener(this);\r\n        tv_movedate.setOnClickListener(this);\r\n\r\n        residence_type = \"A\";\r\n        sale_type = \"월세\";\r\n\r\n        nego = false;\r\n        air_conditioner = false;\r\n        middle_door = false;\r\n        refrigerator = false;\r\n        kimchi_refrigerator = false;\r\n        closet = false;\r\n\r\n        price_first = -1;\r\n        sale_price = -1L;\r\n\r\n        callbackMethod = new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                movedate = year + \"년 \" + month + \"월 \" + dayOfMonth + \"일\";\r\n                tv_movedate.setText(movedate);\r\n            }\r\n        };\r\n\r\n        edit_dong.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_dong.getText().toString().equals(\"\") || edit_dong.getText().toString() == null) {\r\n\r\n                } else {\r\n                    dong = Integer.parseInt(edit_dong.getText().toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_ho.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_ho.getText().toString().equals(\"\") || edit_ho.getText().toString() == null) {\r\n\r\n                } else {\r\n                    ho = Integer.parseInt(edit_ho.getText().toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_short.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_short.getText().toString().equals(\"\") || edit_introduce_short.getText().toString() == null) {\r\n\r\n                } else {\r\n                    short_description = edit_introduce_short.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_long.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_long.getText().toString().equals(\"\") || edit_introduce_long.getText().toString() == null) {\r\n\r\n                } else {\r\n                    long_description = edit_introduce_long.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_area1.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_area1.getText().toString().equals(\"\") || edit_area1.getText().toString() == null) {\r\n                    tv_area1.setText(\"평수\");\r\n                } else {\r\n                    try {\r\n                        net_leaseable_area = Double.parseDouble(edit_area1.getText().toString().trim());\r\n                        tv_area1.setText(translateArea(net_leaseable_area));\r\n                    } catch (NumberFormatException e) {\r\n                        tv_area1.setText(\"평수\");\r\n                        Toast.makeText(getBaseContext(), \"숫자만 입력해주세요\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        edit_area2.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_area2.getText().toString().equals(\"\") || edit_area2.getText().toString() == null) {\r\n                    tv_area2.setText(\"평수\");\r\n                } else {\r\n                    try {\r\n                        leaseable_area = Double.parseDouble(edit_area2.getText().toString().trim());\r\n                        tv_area2.setText(translateArea(leaseable_area));\r\n                    } catch (NumberFormatException e) {\r\n                        tv_area2.setText(\"평수\");\r\n                        Toast.makeText(getBaseContext(), \"숫자만 입력해주세요\", Toast.LENGTH_SHORT).show();\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_price_all.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_price_all.getText().toString().equals(\"\") || edit_price_all.getText().toString() == null) {\r\n                    tv_price_all.setText(\"가격\");\r\n                } else {\r\n                    sale_price = Long.parseLong(edit_price_all.getText().toString().trim());\r\n                    tv_price_all.setText(translatePrice(sale_price));\r\n                    tv_price_ratio1.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                    tv_price_ratio2.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        edit_price_month.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_price_month.getText().toString().equals(\"\") || edit_price_month.getText().toString() == null) {\r\n                    tv_price_month.setText(\"가격\");\r\n                } else {\r\n                    monthly_price = Long.parseLong(edit_price_month.getText().toString().trim());\r\n                    tv_price_month.setText(translatePrice(monthly_price));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        edit_price_manage.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_price_manage.getText().toString().equals(\"\") || edit_price_manage.getText().toString() == null) {\r\n                    tv_price_manage.setText(\"가격\");\r\n                } else {\r\n                    admin_expenses = Long.parseLong(edit_price_manage.getText().toString().trim());\r\n                    tv_price_manage.setText(translatePrice(admin_expenses));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        slider_ratio1.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                if (sale_price == -1) {\r\n                    tv_price_ratio1.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                } else {\r\n                    List<Float> thumbs = slider.getValues();\r\n                    down_pay_per = Math.round(thumbs.get(0));\r\n                    intermediate_pay_per = Math.round(thumbs.get(1));\r\n                    intermediate_pay_per = intermediate_pay_per - down_pay_per;\r\n                    balance_per = 100 - down_pay_per - intermediate_pay_per;\r\n                    tv_ratio1.setText(down_pay_per + \"% : \" + intermediate_pay_per + \"% : \" + balance_per + \"%\");\r\n                    price_first = sale_price * down_pay_per / 100;\r\n                    price_second = sale_price * intermediate_pay_per / 100;\r\n                    price_third = sale_price * balance_per / 100;\r\n                    tv_price_ratio1.setText(\"계약금 : \" + translatePrice(price_first) + \"\\n중도금 : \" + translatePrice(price_second) + \"\\n    잔금 : \" + translatePrice(price_third));\r\n                    tv_price_ratio2.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                }\r\n            }\r\n        });\r\n        slider_ratio2.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                if (price_first == -1) {\r\n                    tv_price_ratio2.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                } else {\r\n                    List<Float> thumbs = slider.getValues();\r\n                    provisional_down_pay_per = Math.round(thumbs.get(0));\r\n                    long second = 100 - provisional_down_pay_per;\r\n                    tv_ratio2.setText(provisional_down_pay_per + \"% : \" + second + \"%\");\r\n                    long first = price_first * provisional_down_pay_per / 100;\r\n                    second = price_first * second / 100;\r\n                    tv_price_ratio2.setText(\"        가계약금 : \" + translatePrice(first) + \"\\n나머지 계약금 : \" + translatePrice(second));\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.N)\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.btn_back_upload:\r\n                onBackPressed();\r\n                break;\r\n\r\n            case R.id.btn_type1:\r\n                if (!sale_type.equals(\"월세\")) {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    lin_price_month.setVisibility(View.VISIBLE);\r\n                    tv_price_type.setText(\"보증금\");\r\n                    sale_type = \"월세\";\r\n                }\r\n                break;\r\n\r\n            case R.id.btn_type2:\r\n                if (!sale_type.equals(\"전세\")) {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    lin_price_month.setVisibility(View.GONE);\r\n                    tv_price_type.setText(\"전세금\");\r\n                    sale_type = \"전세\";\r\n                }\r\n                break;\r\n\r\n            case R.id.btn_type3:\r\n                if (!sale_type.equals(\"매매\")) {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    lin_price_month.setVisibility(View.GONE);\r\n                    tv_price_type.setText(\"매매가\");\r\n                    sale_type = \"매매\";\r\n                }\r\n                break;\r\n\r\n            case R.id.chk_nego:\r\n                if (chk_nego.isChecked()) {\r\n                    nego = true;\r\n                } else {\r\n                    nego = false;\r\n                }\r\n                break;\r\n            case R.id.chk_door:\r\n                if (chk_door.isChecked()) {\r\n                    middle_door = true;\r\n                } else {\r\n                    middle_door = false;\r\n                }\r\n                break;\r\n            case R.id.chk_air:\r\n                if (chk_air.isChecked()) {\r\n                    air_conditioner = true;\r\n                } else {\r\n                    air_conditioner = false;\r\n                }\r\n                break;\r\n            case R.id.chk_ref:\r\n                if (chk_ref.isChecked()) {\r\n                    refrigerator = true;\r\n                } else {\r\n                    refrigerator = false;\r\n                }\r\n                break;\r\n            case R.id.chk_kimchi:\r\n                if (chk_kimchi.isChecked()) {\r\n                    kimchi_refrigerator = true;\r\n                } else {\r\n                    kimchi_refrigerator = false;\r\n                }\r\n                break;\r\n            case R.id.chk_closet:\r\n                if (chk_closet.isChecked()) {\r\n                    closet = true;\r\n                } else {\r\n                    closet = false;\r\n                }\r\n                break;\r\n            case R.id.chk_oven:\r\n                if (chk_oven.isChecked()) {\r\n                    oven = true;\r\n                } else {\r\n                    oven = false;\r\n                }\r\n                break;\r\n            case R.id.chk_induction:\r\n                if (chk_induction.isChecked()) {\r\n                    induction = true;\r\n                } else {\r\n                    induction = false;\r\n                }\r\n                break;\r\n            case R.id.chk_airsystem:\r\n                if (chk_airsystem.isChecked()) {\r\n                    airsystem = true;\r\n                } else {\r\n                    airsystem = false;\r\n                }\r\n                break;\r\n\r\n            case R.id.tv_complete:\r\n                upload_dialog(view);\r\n                break;\r\n\r\n            case R.id.edit_apartment:\r\n                Intent intent = new Intent(getBaseContext(), SearchActivity_upload.class);\r\n                startActivityForResult(intent, 1);\r\n\r\n            case R.id.chk_movenow:\r\n                if (chk_movenow.isChecked()) {\r\n                    tv_movedate.setVisibility(View.GONE);\r\n                    movedate = \"즉시 입주\";\r\n                } else {\r\n                    tv_movedate.setVisibility(View.VISIBLE);\r\n                }\r\n                break;\r\n\r\n            case R.id.tv_movedate:\r\n                DatePickerDialog dialog = new DatePickerDialog(UploadActivity.this, callbackMethod, cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DATE));\r\n                dialog.show();\r\n        }\r\n    }\r\n\r\n\r\n    public String translatePrice(Long price) {\r\n\r\n        String a = \"\", b = \"\", c = \"\";\r\n        if (price == 0) {\r\n            return \"0원\";\r\n        }\r\n        if (price == -1) {\r\n            return \"무제한\";\r\n        }\r\n        if (price >= 100000000) {\r\n            Long price1 = price / 100000000;\r\n            price %= 100000000;\r\n            a = price1 + \"억 \";\r\n        }\r\n        if (price >= 10000) {\r\n            Long price2 = price / 10000;\r\n            price %= 10000;\r\n            b = price2 + \"만\";\r\n        }\r\n        if (price > 0) {\r\n            c = \" \" + price.toString();\r\n        }\r\n        return a + b + c + \"원\";\r\n    }\r\n\r\n    public String translateArea(Double area) {\r\n        area *= 0.3025;\r\n        area = Math.round(area * 10) / 10.0;\r\n        return area.toString() + \" 평\";\r\n    }\r\n\r\n    public void upload_dialog(View v) {\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_upload, null);\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(v.getContext());\r\n        builder.setView(dialogView);\r\n\r\n        final AlertDialog alertDialog = builder.create();\r\n        alertDialog.show();\r\n\r\n        Button ok_btn = dialogView.findViewById(R.id.btn_okay_dialog_upload);\r\n        ok_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n                userId = ((User) getApplication()).getId();\r\n                // todo : user 객채 만들어서 불러와야함\r\n\r\n                boolean judge_pic = models.get(0).getUri() != null && models.get(1).getUri() != null && models.get(2).getUri() != null && models.get(3).getUri() != null;\r\n                if (judge_pic) {\r\n                    pictures = new ArrayList<>();\r\n                    getPicturesList();\r\n                    getDescription();\r\n                    mHouse = new House(userId, residence_name, address, sido, sigungoo, dongri, date,\r\n                            allnumber, parkingnumber, contact, code, dong, ho, net_leaseable_area, leaseable_area,\r\n                            residence_type, sale_type, sale_price, monthly_price, admin_expenses, provisional_down_pay_per,\r\n                            down_pay_per, intermediate_pay_per, balance_per, roomcnt, toiletcnt, middle_door,\r\n                            air_conditioner, refrigerator, kimchi_refrigerator, closet, oven, induction, airsystem,\r\n                            nego, short_description, long_description, models_description.get(0), models_description.get(1),\r\n                            models_description.get(2),  models_description.get(3),  models_description.get(4),\r\n                            models_description.get(5),  models_description.get(6),  models_description.get(7),  models_description.get(8),  movedate);\r\n                    doRetrofit();\r\n//                    Intent intent = new Intent(getBaseContext(), MainActivity.class);\r\n//                    startActivity(intent);\r\n                } else {\r\n                    Toast.makeText(UploadActivity.this, \"필수 사진을 등록해주세요\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                // todo : retrofit\r\n\r\n//                Intent intent = new Intent(getBaseContext(), MainActivity.class);\r\n//                startActivityForResult(intent,0);\r\n            }\r\n        });\r\n\r\n        Button cancle_btn = dialogView.findViewById(R.id.btn_no_dialog_upload);\r\n        cancle_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getDescription() {\r\n        models_description = new ArrayList<>();\r\n        models_description.add(models.get(0).getDescription());\r\n        models_description.add(models.get(1).getDescription());\r\n        models_description.add(models.get(2).getDescription());\r\n        models_description.add(models.get(3).getDescription());\r\n\r\n        for (int i=0;i<roomcnt;i++) {\r\n            models_description.add(models.get(4+i).getDescription());\r\n        }\r\n        for (int i=0;i<3-roomcnt;i++) {\r\n            models_description.add(\"\");\r\n        }\r\n        for (int i=0;i<toiletcnt;i++) {\r\n            models_description.add(models.get(4+roomcnt+i).getDescription());\r\n        }\r\n        for (int i=0;i<2-toiletcnt;i++) {\r\n            models_description.add(\"\");\r\n        }\r\n\r\n    }\r\n\r\n    private void doRetrofit() {\r\n\r\n        RESTApi mRESTApi = RESTApi.retrofit.create(RESTApi.class);\r\n        Log.d(\"beforeUploadActivity\", \"pictures\" + pictures);\r\n\r\n//        mRESTApi.uploadHouse1(pictures)\r\n//                .enqueue(new Callback<ResponseBody>() {\r\n//                    @Override\r\n//                    public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\r\n//                        Log.d(\"testtest\", \"\");\r\n//                        String test_code = response.headers().get(\"code\");\r\n//                        String test_body = response.headers().get(\"code\");\r\n//                        Log.d(\"UploadActivity\", \"headercode\" + test_code);\r\n//                        Log.d(\"UploadActivity\", \"body\" + test_body);\r\n//                        Log.d(\"UploadActivity\", \"pictures\" + pictures);\r\n//\r\n//\r\n////                        if (test_code != null && test_code.equals(\"00\")) {\r\n////                            Intent intent = new Intent(UploadActivity.this, MainActivity.class);\r\n//////                            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);\r\n////                            startActivity(intent);\r\n////                            finish();\r\n////                        } else {\r\n////                            Toast.makeText(UploadActivity.this, \"업로드 실패\" + test_code, Toast.LENGTH_SHORT).show();\r\n////                        }\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void onFailure(Call<ResponseBody> call, Throwable throwable) {\r\n//                        Log.d(\"UploadActivity\", throwable.getMessage());\r\n//                    }\r\n//                });\r\n\r\n        mRESTApi.uploadHouse(mHouse.getUserId(), mHouse.getResidence_name(), mHouse.getCode(), mHouse.getAddress(), mHouse.getSido(), mHouse.getSigungoo(), mHouse.getDongri(),\r\n                mHouse.getDate(), mHouse.getAllnumber(), mHouse.getParkingnumber(), mHouse.getContact(), mHouse.getDong(), mHouse.getHo(), mHouse.getNet_leaseable_area(),\r\n                mHouse.getLeaseable_area(), mHouse.getResidence_type(), mHouse.getSale_type(), mHouse.getSale_price(), mHouse.getMonthly_price(), mHouse.getAdmin_expenses(),\r\n                mHouse.getProvisional_down_pay_per(), mHouse.getDown_pay_per(), mHouse.getIntermediate_pay_per(), mHouse.getBalance_per(), mHouse.getRoom_num(), mHouse.getToilet_num(),\r\n                mHouse.isMiddle_door(), mHouse.isAir_conditioner(), mHouse.isRefrigerator(), mHouse.isKimchi_refrigerator(), mHouse.isCloset(), mHouse.isOven(), mHouse.isInduction(),\r\n                mHouse.isAirsystem(), mHouse.isNego(), mHouse.getShort_description(), mHouse.getLong_description(), mHouse.getApartment_description(), mHouse.getPorch_description(), mHouse.getLivingroom_description(),\r\n                mHouse.getKitchen_description(), mHouse.getRoom1_description(), mHouse.getRoom2_description(), mHouse.getRoom3_description(), mHouse.getToilet1_description(),\r\n                mHouse.getToilet2_description(), mHouse.getMovedate(), pictures)\r\n                .enqueue(new Callback<ResponseBody>() {\r\n                    @Override\r\n                    public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\r\n                        Log.d(\"testtest\", \"\");\r\n                        String test_code = response.headers().get(\"code\");\r\n                        String test_body = response.headers().get(\"code\");\r\n                        Log.d(\"UploadActivity\", \"headercode\" + test_code);\r\n                        Log.d(\"UploadActivity\", \"body\" + test_body);\r\n                        Log.d(\"UploadActivity\", \"pictures\" + pictures);\r\n\r\n\r\n                        if (test_code != null && test_code.equals(\"00\")) {\r\n                            Intent intent = new Intent(UploadActivity.this, MainActivity.class);\r\n//                            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                            startActivity(intent);\r\n                            finish();\r\n                        } else {\r\n                            Toast.makeText(UploadActivity.this, \"업로드 실패\" + test_code, Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(Call<ResponseBody> call, Throwable throwable) {\r\n                        Log.d(\"UploadActivity\", throwable.getMessage());\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void getPicturesList() {\r\n        for (int i = 0; i < models.size(); i++) {\r\n            Uri uri = models.get(i).getUri();\r\n            if (uri != null) {\r\n                transUriToMultiPartFile(uri, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void transUriToMultiPartFile(Uri uri, int position) {\r\n        MultipartBody.Part filePart = null;\r\n        Bitmap img = null;\r\n\r\n        //change Uri to Bitmap\r\n        if (uri != null) {\r\n            try {\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\r\n                    img = ImageDecoder.decodeBitmap(ImageDecoder.createSource(getContentResolver(), uri));\r\n                } else {\r\n                    img = MediaStore.Images.Media.getBitmap(getContentResolver(), uri);\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            img = BitmapFactory.decodeResource(getResources(), R.drawable.preview);\r\n        }\r\n\r\n        try {\r\n\r\n            //Convert bitmap to byte array\r\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n            img.compress(Bitmap.CompressFormat.JPEG, 100 /*ignored for PNG*/, bos);\r\n            byte[] bitmapdata = bos.toByteArray();\r\n\r\n            //create a file to write bitmap data\r\n            File f = new File(this.getCacheDir(), \"filename\");\r\n            try {\r\n                f.createNewFile();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            //write the bytes in file\r\n            FileOutputStream fos = null;\r\n            try {\r\n                fos = new FileOutputStream(f);\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n            try {\r\n                fos.write(bitmapdata);\r\n                fos.flush();\r\n                fos.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            filePart = MultipartBody.Part.createFormData(\"file\",\r\n                    f.getName(), RequestBody.create(MediaType.parse(\"image/*\"), f));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        pictures.add(filePart);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == IMAGE_REQUEST) {\r\n            if (resultCode == RESULT_OK && data != null && data.getData() != null) {\r\n                imageUri = data.getData();\r\n\r\n                //set Image to mIvPicture\r\n                if (imageUri != null) {\r\n                    models.get(picture_clicked_position).setUri(imageUri);\r\n                    viewPager.setAdapter(adapter);\r\n                    //mIvPicture.setImageURI(imageUri);\r\n                }\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                Toast.makeText(this, \"사진 선택 취소\", Toast.LENGTH_LONG).show();\r\n            }\r\n\r\n            viewPager.setCurrentItem(picture_clicked_position, true);\r\n        }\r\n        if (requestCode == NAME_REQUEST) {\r\n            if (resultCode == RESULT_OK) {\r\n                code = data.getStringExtra(\"code\");\r\n                residence_name = data.getStringExtra(\"name\");\r\n                address = data.getStringExtra(\"address\");\r\n                sido = data.getStringExtra(\"sido\");\r\n                sigungoo = data.getStringExtra(\"sigungoo\");\r\n                dongri = data.getStringExtra(\"dongri\");\r\n                date = data.getStringExtra(\"date\");\r\n                allnumber = data.getStringExtra(\"allnumber\");\r\n                parkingnumber = data.getStringExtra(\"parkingnumber\");\r\n                contact = data.getStringExtra(\"contact\");\r\n\r\n\r\n                edit_apartment.setText(residence_name);\r\n                tv_apartaddress_load.setText(address);\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                Toast.makeText(this, \"아파트 선택 취소\", Toast.LENGTH_LONG).show();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(int value) {\r\n        picture_clicked_position = value;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/UploadActivity.java	(revision fe53b32f01a7b2d70c804a19665fbc2f7d3edee1)
+++ app/src/main/java/com/example/publicdatacompetition/UploadActivity.java	(date 1627567904849)
@@ -45,6 +45,7 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.List;
@@ -279,8 +280,22 @@
         callbackMethod = new DatePickerDialog.OnDateSetListener() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
-                movedate = year + "년 " + month + "월 " + dayOfMonth + "일";
-                tv_movedate.setText(movedate);
+                String d,m;
+                if(dayOfMonth<10){
+                    d = "0"+dayOfMonth;
+                }
+                else{
+                    d = ""+dayOfMonth;
+                }
+                month++;//이상하게 월이 하나 적게 들어옴..
+                if(month<10){
+                     m = "0"+month;
+                }
+                else{
+                    m = ""+month;
+                }
+                movedate = year+m+d;
+                tv_movedate.setText(year + "년 " + month + "월 " + dayOfMonth + "일");
             }
         };
 
Index: app/src/main/res/layout/dialog_preupload.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    app:cardCornerRadius=\"5dp\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"10dp\"\r\n    android:elevation=\"10dp\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"300dp\"\r\n        android:layout_margin=\"20dp\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"70dp\"\r\n            android:text=\"등록완료하시겠습니까?\"\r\n            android:textColor=\"@color/black\"\r\n            android:fontFamily=\"@font/applesdgothicneob\"\r\n            android:textSize=\"20dp\"\r\n            android:gravity=\"top|center\"/>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_preupload_roomcnt\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:hint=\"방 개수\"/>\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_preupload_toiletcnt\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:hint=\"화장실 개수\"/>\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:orientation=\"horizontal\">\r\n            <androidx.appcompat.widget.AppCompatButton\r\n                android:id=\"@+id/btn_no_dialog_preupload\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_marginRight=\"10dp\"\r\n                android:layout_weight=\"1\"\r\n                app:backgroundTint=\"@null\"\r\n                android:text=\"취소\"\r\n                android:textColor=\"@color/black\"\r\n                android:background=\"@drawable/button_round_white\"/>\r\n\r\n            <androidx.appcompat.widget.AppCompatButton\r\n                android:id=\"@+id/btn_okay_dialog_preupload\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                app:backgroundTint=\"@null\"\r\n                android:text=\"확인\"\r\n                android:textColor=\"@color/white\"\r\n                android:background=\"@drawable/button_round_blue\"/>\r\n        </LinearLayout>\r\n\r\n\r\n\r\n    </LinearLayout>\r\n\r\n\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_preupload.xml	(revision fe53b32f01a7b2d70c804a19665fbc2f7d3edee1)
+++ app/src/main/res/layout/dialog_preupload.xml	(date 1627567991555)
@@ -33,6 +33,7 @@
                 android:layout_width="0dp"
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
+                android:inputType="number"
                 android:hint="방 개수"/>
 
             <EditText
@@ -40,6 +41,7 @@
                 android:layout_width="0dp"
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
+                android:inputType="number"
                 android:hint="화장실 개수"/>
 
         </LinearLayout>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.publicdatacompetition\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <application\r\n        android:name=\".Model.User\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".MakeContractActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SearchActivity_upload\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyC5222FEBgQ14yfr_a2bDRmkWYXS1AIpFU\" />\r\n\r\n        <activity android:name=\".LoginActivity\">\r\n        </activity>\r\n        <activity android:name=\".MainActivity\" />\r\n        <activity\r\n            android:name=\".JoinActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity\r\n            android:name=\".ResetPasswordActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity android:name=\".SettingActivity\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:parentActivityName=\".ChatListActivity\" />\r\n        <activity\r\n            android:name=\".ChatListActivity\"\r\n            android:parentActivityName=\".SettingActivity\" />\r\n        <activity android:name=\".ListActivity\" />\r\n        <activity android:name=\".MapActivity\" />\r\n        <activity android:name=\".UploadActivity\" />\r\n        <activity android:name=\".FilterActivity\" />\r\n        <activity android:name=\".SearchActivity\" />\r\n        <activity android:name=\".SidoActivity\" />\r\n        <activity android:name=\".SigunguActivity\" />\r\n        <activity android:name=\".HouseInfoActivity\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision fe53b32f01a7b2d70c804a19665fbc2f7d3edee1)
+++ app/src/main/AndroidManifest.xml	(date 1627567133265)
@@ -19,11 +19,7 @@
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
         <activity android:name=".MakeContractActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
 
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
         </activity>
         <activity android:name=".SearchActivity_upload" />
 
@@ -33,7 +29,13 @@
 
         <activity android:name=".LoginActivity">
         </activity>
-        <activity android:name=".MainActivity" />
+        <activity android:name=".MainActivity" >
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
         <activity
             android:name=".JoinActivity"
             android:parentActivityName=".LoginActivity" />
@@ -49,7 +51,8 @@
             android:parentActivityName=".SettingActivity" />
         <activity android:name=".ListActivity" />
         <activity android:name=".MapActivity" />
-        <activity android:name=".UploadActivity" />
+        <activity android:name=".UploadActivity" >
+        </activity>
         <activity android:name=".FilterActivity" />
         <activity android:name=".SearchActivity" />
         <activity android:name=".SidoActivity" />
