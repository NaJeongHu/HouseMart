Index: app/src/main/java/com/example/publicdatacompetition/Adapter/RecyclerViewAdapter_Search.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition.Adapter;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.text.Spannable;\r\nimport android.text.SpannableStringBuilder;\r\nimport android.text.style.ForegroundColorSpan;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.publicdatacompetition.Model.item_search_name;\r\nimport com.example.publicdatacompetition.R;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class RecyclerViewAdapter_Search extends RecyclerView.Adapter<RecyclerViewAdapter_Search.MyViewHolder> {\r\n\r\n    private ArrayList<item_search_name> mList; //new ArrayList<>();\r\n    private LayoutInflater mInflate;\r\n    private Context context;\r\n    private String name;\r\n\r\n    public class MyViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        private TextView tv_apartname;\r\n        private TextView tv_apartaddress;\r\n        private View line_search;\r\n\r\n        public MyViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            tv_apartaddress = itemView.findViewById(R.id.tv_apartaddress);\r\n            tv_apartname = itemView.findViewById(R.id.tv_apartname);\r\n            line_search = itemView.findViewById(R.id.line_search);\r\n        }\r\n\r\n    }\r\n\r\n    public RecyclerViewAdapter_Search(Context context, ArrayList<item_search_name> items) {\r\n        this.mList = items;\r\n        this.mInflate = LayoutInflater.from(context);\r\n        this.context = context;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view = mInflate.inflate(R.layout.item_search_upload, parent, false);\r\n        MyViewHolder vh = new MyViewHolder(view);\r\n\r\n        return vh;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {\r\n        if (mList != null) {\r\n            name = mList.get(position).getName();\r\n            SpannableStringBuilder builder = new SpannableStringBuilder(name);\r\n            builder.setSpan(new ForegroundColorSpan(Color.parseColor(\"#2265DA\")), mList.get(position).getStart(),  mList.get(position).getEnd(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n            holder.tv_apartname.setText(builder);\r\n            holder.tv_apartaddress.setText(mList.get(position).getAddress());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return (null != mList ? mList.size() : 0);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/Adapter/RecyclerViewAdapter_Search.java	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
+++ app/src/main/java/com/example/publicdatacompetition/Adapter/RecyclerViewAdapter_Search.java	(date 1627978268464)
@@ -58,12 +58,14 @@
 
     @Override
     public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {
-        if (mList != null) {
-            name = mList.get(position).getName();
+        if (!mList.isEmpty()) {
+            item_search_name temp = new item_search_name();
+            temp = mList.get(position);
+            name = temp.getName();
             SpannableStringBuilder builder = new SpannableStringBuilder(name);
-            builder.setSpan(new ForegroundColorSpan(Color.parseColor("#2265DA")), mList.get(position).getStart(),  mList.get(position).getEnd(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+            builder.setSpan(new ForegroundColorSpan(Color.parseColor("#2265DA")), temp.getStart(),  temp.getEnd(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
             holder.tv_apartname.setText(builder);
-            holder.tv_apartaddress.setText(mList.get(position).getAddress());
+            holder.tv_apartaddress.setText(temp.getAddress());
         }
     }
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오전_9_36_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오전_9_36_[Default_Changelist]/shelved.patch	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오전_9_36_[Default_Changelist]/shelved.patch	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
@@ -1,72 +0,0 @@
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.publicdatacompetition\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:name=\".Model.User\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n\r\n        <activity android:name=\".SearchActivity_upload\"/>\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyC5222FEBgQ14yfr_a2bDRmkWYXS1AIpFU\" />\r\n\r\n        <activity android:name=\".LoginActivity\">\r\n\r\n        </activity>\r\n        <activity android:name=\".MainActivity\" />\r\n        <activity\r\n            android:name=\".JoinActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity\r\n            android:name=\".ResetPasswordActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity android:name=\".SettingActivity\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:parentActivityName=\".ChatListActivity\" />\r\n        <activity\r\n            android:name=\".ChatListActivity\"\r\n            android:parentActivityName=\".SettingActivity\" />\r\n        <activity android:name=\".ListActivity\" />\r\n        <activity android:name=\".MapActivity\" />\r\n        <activity android:name=\".UploadActivity\"/>\r\n        <activity android:name=\".FilterActivity\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SearchActivity\" />\r\n        <activity android:name=\".SidoActivity\" />\r\n        <activity android:name=\".SigunguActivity\" />\r\n        <activity android:name=\".HouseInfoActivity\" />\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision 996d7d7595f2586ee0522aae0d122f195ac1276b)
-+++ app/src/main/AndroidManifest.xml	(date 1627309448422)
-@@ -25,7 +25,11 @@
-             android:value="AIzaSyC5222FEBgQ14yfr_a2bDRmkWYXS1AIpFU" />
- 
-         <activity android:name=".LoginActivity">
-+            <intent-filter>
-+                <action android:name="android.intent.action.MAIN" />
- 
-+                <category android:name="android.intent.category.LAUNCHER" />
-+            </intent-filter>
-         </activity>
-         <activity android:name=".MainActivity" />
-         <activity
-@@ -44,13 +48,7 @@
-         <activity android:name=".ListActivity" />
-         <activity android:name=".MapActivity" />
-         <activity android:name=".UploadActivity"/>
--        <activity android:name=".FilterActivity" >
--            <intent-filter>
--                <action android:name="android.intent.action.MAIN" />
--
--                <category android:name="android.intent.category.LAUNCHER" />
--            </intent-filter>
--        </activity>
-+        <activity android:name=".FilterActivity" />
-         <activity android:name=".SearchActivity" />
-         <activity android:name=".SidoActivity" />
-         <activity android:name=".SigunguActivity" />
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/misc.xml	(revision 996d7d7595f2586ee0522aae0d122f195ac1276b)
-+++ .idea/misc.xml	(date 1627309448411)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-     <output url="file://$PROJECT_DIR$/build/classes" />
-   </component>
-   <component name="ProjectType">
-Index: .idea/runConfigurations.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/runConfigurations.xml	(revision 996d7d7595f2586ee0522aae0d122f195ac1276b)
-+++ .idea/runConfigurations.xml	(date 1627346178000)
-@@ -3,7 +3,6 @@
-   <component name="RunConfigurationProducerService">
-     <option name="ignoredProducers">
-       <set>
--        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
-         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
-         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
-         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_7_26_2021_8_38_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_7_26_2021_8_38_PM__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_7_25_2021_1_31_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_7_25_2021_1_31_PM__Default_Changelist_.xml
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__4_02__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__4_02__Default_Changelist_.xml	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__4_02__Default_Changelist_.xml	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2021-07-27_오후_4_02_[Default_Changelist]" date="1627369383108" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오후_4_02_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2021-07-27 오후 4:02 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__9_36__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__9_36__Default_Changelist_.xml	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__9_36__Default_Changelist_.xml	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2021-07-27_오전_9_36_[Default_Changelist]" date="1627346194788" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오전_9_36_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2021-07-27 오전 9:36 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오후_4_02_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오후_4_02_[Default_Changelist]/shelved.patch	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27_오후_4_02_[Default_Changelist]/shelved.patch	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
@@ -1,163 +0,0 @@
-Index: app/src/main/java/com/example/publicdatacompetition/FilterActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.publicdatacompetition;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.content.res.AppCompatResources;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.google.android.material.slider.RangeSlider;\r\n\r\nimport java.util.List;\r\n\r\npublic class FilterActivity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    private AppCompatButton btn_type1, btn_type2, btn_type3,btn_year_0,btn_year_1,btn_year_5,btn_year_10,btn_year_15,btn_year_15up\r\n            ,btn_park_0,btn_park_1,btn_park_2,btn_filter;\r\n    private LinearLayout linear_month, linear_guarantee, linear_sale;\r\n    private TextView tv_price1, tv_price2, tv_price3, tv_area,tv_reset;\r\n    private RangeSlider slider1, slider2, slider3, slider4;\r\n    private ImageView btn_back;\r\n\r\n\r\n    private boolean S, M, C;\r\n    private long guarantee_start, guarantee_end, monthly_start, monthly_end, sale_start, sale_end;\r\n    private double area_start, area_end;\r\n    private int year,park;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_filter);\r\n        init();\r\n\r\n    }\r\n\r\n    public void init() {\r\n\r\n        S = true;\r\n        M = false;\r\n        C = false;\r\n\r\n        UploadActivity uploadActivity = new UploadActivity();\r\n\r\n        btn_back = findViewById(R.id.btn_back);\r\n        btn_filter = findViewById(R.id.btn_filter);\r\n        tv_reset = findViewById(R.id.tv_reset);\r\n\r\n        btn_type1 = findViewById(R.id.btn_type1);\r\n        btn_type2 = findViewById(R.id.btn_type2);\r\n        btn_type3 = findViewById(R.id.btn_type3);\r\n        btn_year_0 = findViewById(R.id.btn_year_0);\r\n        btn_year_1 = findViewById(R.id.btn_year_1);\r\n        btn_year_5 = findViewById(R.id.btn_year_5);\r\n        btn_year_10 = findViewById(R.id.btn_year_10);\r\n        btn_year_15 = findViewById(R.id.btn_year_15);\r\n        btn_year_15up = findViewById(R.id.btn_year_15up);\r\n        btn_park_0 = findViewById(R.id.btn_park_0);\r\n        btn_park_1 = findViewById(R.id.btn_park_1);\r\n        btn_park_2 = findViewById(R.id.btn_park_2);\r\n\r\n        linear_sale = findViewById(R.id.linear_sale);\r\n        linear_guarantee = findViewById(R.id.linear_guarantee);\r\n        linear_month = findViewById(R.id.linear_month);\r\n\r\n        slider1 = findViewById(R.id.slider1);\r\n        slider2 = findViewById(R.id.slider2);\r\n        slider3 = findViewById(R.id.slider3);\r\n        slider4 = findViewById(R.id.slider4);\r\n\r\n        tv_price1 = findViewById(R.id.tv_price1);\r\n        tv_price2 = findViewById(R.id.tv_price2);\r\n        tv_price3 = findViewById(R.id.tv_price3);\r\n        tv_area = findViewById(R.id.tv_area);\r\n\r\n        btn_type1.setOnClickListener(this);\r\n        btn_type2.setOnClickListener(this);\r\n        btn_type3.setOnClickListener(this);\r\n\r\n        btn_year_0.setOnClickListener(this);\r\n        btn_year_1.setOnClickListener(this);\r\n        btn_year_5.setOnClickListener(this);\r\n        btn_year_10.setOnClickListener(this);\r\n        btn_year_15.setOnClickListener(this);\r\n        btn_year_15up.setOnClickListener(this);\r\n\r\n        btn_park_0.setOnClickListener(this);\r\n        btn_park_1.setOnClickListener(this);\r\n        btn_park_2.setOnClickListener(this);\r\n\r\n        tv_reset.setOnClickListener(this);\r\n        btn_back.setOnClickListener(this);\r\n        btn_filter.setOnClickListener(this);\r\n\r\n\r\n\r\n        slider1.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                List<Float> thumbs = slider.getValues();\r\n                int st = Math.round(thumbs.get(0));\r\n                int ed = Math.round(thumbs.get(1));\r\n                guarantee_start = cal1(st);\r\n                guarantee_end = cal1(ed);\r\n                tv_price1.setText(uploadActivity.translatePrice(guarantee_start) + \"~\" + uploadActivity.translatePrice(guarantee_end));\r\n            }\r\n        });\r\n\r\n        slider2.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                List<Float> thumbs = slider.getValues();\r\n                int st = Math.round(thumbs.get(0));\r\n                int ed = Math.round(thumbs.get(1));\r\n                monthly_start = cal2(st);\r\n                monthly_end = cal2(ed);\r\n                tv_price2.setText(uploadActivity.translatePrice(monthly_start) + \"~\" + uploadActivity.translatePrice(monthly_end));\r\n            }\r\n        });\r\n\r\n        slider3.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                List<Float> thumbs = slider.getValues();\r\n                int st = Math.round(thumbs.get(0));\r\n                int ed = Math.round(thumbs.get(1));\r\n                sale_start = cal3(st);\r\n                sale_end = cal3(ed);\r\n                tv_price3.setText(uploadActivity.translatePrice(sale_start) + \"~\" + uploadActivity.translatePrice(sale_end));\r\n            }\r\n        });\r\n\r\n        slider4.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                String x,y;\r\n                List<Float> thumbs = slider.getValues();\r\n                area_start = Math.round(thumbs.get(0));\r\n                area_end = Math.round(thumbs.get(1));\r\n                if (area_start != 200) {\r\n                    x= ((int) area_start)+\"m²(\"+uploadActivity.translateArea(area_start)+\")\";\r\n                }\r\n                else{\r\n                    area_start = -1;\r\n                    x = \"무제한\";\r\n                }\r\n                if (area_end != 200) {\r\n                    y =((int) area_end)+\"m²(\"+uploadActivity.translateArea(area_end)+\")\";\r\n                }\r\n                else{\r\n                    area_end = -1;\r\n                    y = \"무제한\";\r\n                }\r\n                tv_area.setText(x + \"~\" + y);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n\r\n            case R.id.btn_back:\r\n                onBackPressed();\r\n                break;\r\n\r\n            case R.id.btn_filter:\r\n                // 여기서 필터 조건 돌려줌!\r\n                break;\r\n\r\n            case R.id.tv_reset:\r\n                finish();\r\n                startActivity(new Intent(FilterActivity.this, FilterActivity.class));\r\n                break;\r\n\r\n            case R.id.btn_type1:\r\n                if (M) {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    linear_month.setVisibility(View.GONE);\r\n                    if (!C) {\r\n                        linear_guarantee.setVisibility(View.GONE);\r\n                    }\r\n                    M = false;\r\n                } else {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    linear_month.setVisibility(View.VISIBLE);\r\n                    linear_guarantee.setVisibility(View.VISIBLE);\r\n                    M = true;\r\n                }\r\n                break;\r\n\r\n            case R.id.btn_type2:\r\n                if (C) {\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    if (!M) {\r\n                        linear_guarantee.setVisibility(View.GONE);\r\n                    }\r\n                    C = false;\r\n                } else {\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    linear_guarantee.setVisibility(View.VISIBLE);\r\n                    C = true;\r\n                }\r\n                break;\r\n\r\n            case R.id.btn_type3:\r\n                if (S) {\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    linear_sale.setVisibility(View.GONE);\r\n                    S = false;\r\n                } else {\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    linear_sale.setVisibility(View.VISIBLE);\r\n                    S = true;\r\n                }\r\n                break;\r\n\r\n            case R.id.btn_year_0:\r\n                resetYearButton();\r\n                btn_year_0.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_year_0.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                year=0;\r\n                break;\r\n            case R.id.btn_year_1:\r\n                resetYearButton();\r\n                btn_year_1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_year_1.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                year=1;\r\n                break;\r\n            case R.id.btn_year_5:\r\n                resetYearButton();\r\n                btn_year_5.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_year_5.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                year=5;\r\n                break;\r\n            case R.id.btn_year_10:\r\n                resetYearButton();\r\n                btn_year_10.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_year_10.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                year=10;\r\n                break;\r\n            case R.id.btn_year_15:\r\n                resetYearButton();\r\n                btn_year_15.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_year_15.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                year=15;\r\n                break;\r\n            case R.id.btn_year_15up:\r\n                resetYearButton();\r\n                btn_year_15up.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_year_15up.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                year=-1;\r\n                break;\r\n\r\n            case R.id.btn_park_0:\r\n                resetParkButton();\r\n                btn_park_0.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_park_0.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                park=0;\r\n                break;\r\n\r\n            case R.id.btn_park_1:\r\n                resetParkButton();\r\n                btn_park_1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_park_1.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                park=1;\r\n                break;\r\n\r\n            case R.id.btn_park_2:\r\n                resetParkButton();\r\n                btn_park_2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                btn_park_2.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                park=2;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private long cal1(int num) {\r\n        long result;\r\n        if (num == 0) result = 0;\r\n        else if (num <= 5) result = num * 100;\r\n        else if (num <= 10) result = 500 + (num - 5) * 500;\r\n        else if (num <= 27) result = 3000 + (num - 10) * 1000;\r\n        else if (num <= 33) result = 20000 + (num - 27) * 5000;\r\n        else if (num <= 39) result = 50000 + (num - 33) * 10000;\r\n        else return -1;\r\n        return result * 10000;\r\n    }\r\n\r\n    private long cal2(int num) {\r\n        long result;\r\n        if (num == 0) result = 0;\r\n        else if (num <= 20) result = num * 5;\r\n        else if (num <= 30) result = 100 + (num - 20) * 10;\r\n        else if (num <= 39) result = 200 + (num - 30) * 50;\r\n        else return -1;\r\n        return result * 10000;\r\n    }\r\n\r\n    private long cal3(int num) {\r\n        long result;\r\n        if (num == 0) result = 0;\r\n        else if (num <= 5) result = num * 1000;\r\n        else if (num == 6) result = 10000;\r\n        else if (num <= 15) result = 10000 + (num - 6) * 10000;\r\n        else if (num <= 19) result = 100000 + (num - 15) * 50000;\r\n        else return -1;\r\n        return result * 10000;\r\n    }\r\n    private void resetYearButton(){\r\n        btn_year_0.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_year_0.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n        btn_year_1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_year_1.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n        btn_year_5.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_year_5.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n        btn_year_10.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_year_10.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n        btn_year_15.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_year_15.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n        btn_year_15up.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_year_15up.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n    }\r\n\r\n    private void resetParkButton(){\r\n        btn_park_0.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_park_0.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n        btn_park_1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_park_1.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n        btn_park_2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n        btn_park_2.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/publicdatacompetition/FilterActivity.java	(revision 70e32352f29c09b958d58ca2cfe6cdd12491d7f1)
-+++ app/src/main/java/com/example/publicdatacompetition/FilterActivity.java	(date 1627369298111)
-@@ -13,6 +13,7 @@
- import androidx.appcompat.widget.AppCompatButton;
- import androidx.core.content.ContextCompat;
- 
-+import com.example.publicdatacompetition.Model.Filter;
- import com.google.android.material.slider.RangeSlider;
- 
- import java.util.List;
-@@ -32,6 +33,8 @@
-     private double area_start, area_end;
-     private int year,park;
- 
-+    private Filter mFilter;
-+
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-@@ -42,8 +45,8 @@
- 
-     public void init() {
- 
--        S = true;
--        M = false;
-+        S = false;
-+        M = true;
-         C = false;
- 
-         UploadActivity uploadActivity = new UploadActivity();
-@@ -172,7 +175,8 @@
-                 break;
- 
-             case R.id.btn_filter:
--                // 여기서 필터 조건 돌려줌!
-+                mFilter = new Filter(S,M,C,guarantee_start,guarantee_end,monthly_start,monthly_end,sale_start,sale_end,area_start,area_end,year,park);
-+                //todo 리스트 액티비티로 필터의 값 전달
-                 break;
- 
-             case R.id.tv_reset:
-Index: app/src/main/java/com/example/publicdatacompetition/Model/Filter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.publicdatacompetition.Model;\r\n\r\npublic class Filter {\r\n    private boolean S, M, C;//가격 유형 (S : 매매, M : 월세, C : 전세)\r\n    private long guarantee_start;//전세금 최소\r\n    private long guarantee_end;//전세금 최대  //-1일 경우 무제한\r\n    private long monthly_start;//월세 최소\r\n    private long monthly_end;//월세 최대 //-1일 경우 무제한\r\n    private long sale_start;//매매가 최소\r\n    private long sale_end;//매매가 최대 //-1일 경우 무제한\r\n    private double area_start;//면적 최소\r\n    private double area_end;//면적 최대  //-1일 경우 무제한\r\n    private int year;//준공일로부터 년도 // -1일 경우 15년 이상 선택\r\n    private int park;//주차 가능 대수\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/publicdatacompetition/Model/Filter.java	(revision 70e32352f29c09b958d58ca2cfe6cdd12491d7f1)
-+++ app/src/main/java/com/example/publicdatacompetition/Model/Filter.java	(date 1627369066181)
-@@ -12,4 +12,22 @@
-     private double area_end;//면적 최대  //-1일 경우 무제한
-     private int year;//준공일로부터 년도 // -1일 경우 15년 이상 선택
-     private int park;//주차 가능 대수
-+
-+    public Filter(boolean s, boolean m, boolean c, long guarantee_start, long guarantee_end, long monthly_start, long monthly_end, long sale_start, long sale_end, double area_start, double area_end, int year, int park) {
-+        S = s;
-+        M = m;
-+        C = c;
-+        this.guarantee_start = guarantee_start;
-+        this.guarantee_end = guarantee_end;
-+        this.monthly_start = monthly_start;
-+        this.monthly_end = monthly_end;
-+        this.sale_start = sale_start;
-+        this.sale_end = sale_end;
-+        this.area_start = area_start;
-+        this.area_end = area_end;
-+        this.year = year;
-+        this.park = park;
-+    }
- }
-+
-+
-Index: app/src/main/java/com/example/publicdatacompetition/UploadActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.publicdatacompetition;\r\n\r\nimport android.animation.ArgbEvaluator;\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.ImageDecoder;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.DatePicker;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.content.res.AppCompatResources;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.example.publicdatacompetition.Adapter.PagerAdapter_Picture;\r\nimport com.example.publicdatacompetition.Model.House;\r\nimport com.example.publicdatacompetition.Model.Pictures;\r\nimport com.example.publicdatacompetition.Model.User;\r\nimport com.google.android.material.slider.RangeSlider;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.ResponseBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class UploadActivity extends AppCompatActivity implements View.OnClickListener, PagerAdapter_Picture.OnItemClick {\r\n\r\n    private ImageView btn_back;\r\n    private AppCompatButton btn_type1, btn_type2, btn_type3, btn_no_dialog_upload, btn_okay_dialog_upload;\r\n    private LinearLayout lin_price_month;\r\n    private TextInputEditText edit_dong, edit_ho, edit_area1, edit_area2, edit_price_all, edit_price_month, edit_price_manage,\r\n            edit_introduce_short, edit_introduce_long, edit_room, edit_toilet, edit_introduce_livingroom, edit_introduce_kitchen,\r\n            edit_introduce_room1, edit_introduce_room2, edit_introduce_room3, edit_introduce_toilet1, edit_introduce_toilet2, edit_introuce_apartment;\r\n    private TextView tv_area1, tv_area2, tv_ratio1, tv_ratio2, tv_price_ratio1, tv_price_ratio2, tv_price_type, tv_price_all, tv_price_month, tv_price_manage, tv_complete, edit_apartment, tv_movedate, tv_apartaddress_load;\r\n    private RangeSlider slider_ratio1, slider_ratio2;\r\n    private CheckBox chk_nego, chk_door, chk_air, chk_ref, chk_kimchi, chk_closet, chk_oven, chk_induction, chk_airsystem, chk_movenow;\r\n    private Calendar cal;\r\n\r\n    private long price_first, price_second, price_third;\r\n\r\n    private int picture_clicked_position = 0;\r\n\r\n    private PagerAdapter_Picture pagerAdapter_picture;\r\n\r\n    private DatePickerDialog.OnDateSetListener callbackMethod;\r\n    private ViewPager viewPager;\r\n    private PagerAdapter_Picture adapter;\r\n    private List<Pictures> models;\r\n\r\n    House mHouse;\r\n\r\n    private static final int IMAGE_REQUEST = 0;\r\n    private static final int NAME_REQUEST = 1;\r\n    private Uri imageUri;\r\n\r\n    private String userId;//사용자 이름\r\n    private String residence_name;//아파트 이름\r\n    private String code;//아파트 코드\r\n    private String address;//도로명 주소\r\n    private String sido;//시도\r\n    private String sigungoo;//시군구\r\n    private String dongri;//동리\r\n    private String date;//사용승인일일\r\n    private String allnumber;//세대수\r\n    private String parkingnumber;//총주차대수\r\n    private String contact;//관리사무소 연락처\r\n\r\n    private Integer dong, ho;//동,호수\r\n    private Double net_leaseable_area;//전용면적\r\n    private Double leaseable_area;//공급면적\r\n\r\n    private String residence_type;//매물 타입(A,V,O)\r\n    private String sale_type;//\"월세\",\"전세\",\"매매\"\r\n    private Long sale_price;//매매가/전세금/보증금\r\n    private Long monthly_price;//월세\r\n    private Long admin_expenses;//관리비\r\n\r\n    private Integer provisional_down_pay_per;//가계약금 비율\r\n    private Integer down_pay_per;//계약금 비율\r\n    private Integer intermediate_pay_per;//중도금 비율\r\n    private Integer balance_per;//잔금 비율\r\n\r\n    private Integer room_num;//방 개수\r\n    private Integer toilet_num;//욕실 개수\r\n\r\n    private boolean middle_door;//중문\r\n    private boolean air_conditioner;//시스템 에어컨\r\n    private boolean refrigerator;//냉장고\r\n    private boolean kimchi_refrigerator;//김치냉장고\r\n    private boolean closet;//붙박이장\r\n    private boolean oven;//빌트인 오븐\r\n    private boolean induction;//인덕션\r\n    private boolean airsystem;//공조기 시스템\r\n\r\n    private boolean nego;//네고가능\r\n\r\n    private String short_description;//짧은 집 소개\r\n    private String long_description;//긴 집 소개\r\n    private String apartment_description;//아파트 소개\r\n    private String livingroom_description;//거실 소개\r\n    private String kitchen_description;//주방 소개\r\n    private String room1_description;//방1 소개\r\n    private String room2_description;//방2 소개\r\n    private String room3_description;//방3 소개\r\n    private String toilet1_description;//화장실1 소개\r\n    private String toilet2_description;//화장실2 소개\r\n\r\n    private String movedate;//입주가능일\r\n\r\n    private List<MultipartBody.Part> pictures;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_upload);\r\n\r\n        init();\r\n        models = new ArrayList<>();\r\n        models.add(new Pictures(\"아파트 외관 사진을 등록해주세요\", R.drawable.image_apartment));\r\n        models.add(new Pictures(\"현관 사진을 등록해주세요\", R.drawable.image_frontdoor));\r\n        models.add(new Pictures(\"거실 사진을 등록해주세요\", R.drawable.image_livingroom));\r\n        models.add(new Pictures(\"베란다 사진을 등록해주세요\", R.drawable.image_veranda));\r\n        models.add(new Pictures(\"주방 사진을 등록해주세요\", R.drawable.image_kitchen));\r\n        models.add(new Pictures(\"방1 사진을 등록해주세요\", R.drawable.image_room4));\r\n        models.add(new Pictures(\"방2 사진을 등록해주세요\", R.drawable.image_room3));\r\n        models.add(new Pictures(\"방3 사진을 등록해주세요\", R.drawable.image_room2));\r\n        models.add(new Pictures(\"방4 사진을 등록해주세요\", R.drawable.image_room1));\r\n        models.add(new Pictures(\"화장실1 사진을 등록해주세요\", R.drawable.image_toilet1));\r\n        models.add(new Pictures(\"화장실2 사진을 등록해주세요\", R.drawable.image_toilet2));\r\n        models.add(new Pictures(\"화장실3 사진을 등록해주세요\", R.drawable.image_toilet3));\r\n\r\n        pagerAdapter_picture = new PagerAdapter_Picture();\r\n\r\n        adapter = new PagerAdapter_Picture(models, this, this);\r\n\r\n        viewPager = findViewById(R.id.viewPager_upload_picture);\r\n        int dpValue = 54;\r\n        float d = getResources().getDisplayMetrics().density;\r\n        int margin = (int) (dpValue * d);\r\n        viewPager.setClipToPadding(false);\r\n        viewPager.setPadding(margin, 0, margin, 0);\r\n        viewPager.setPageMargin(margin / 3);\r\n\r\n        viewPager.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    private void init() {\r\n\r\n        cal = Calendar.getInstance();\r\n\r\n        btn_back = findViewById(R.id.btn_back_upload);\r\n\r\n        btn_type1 = findViewById(R.id.btn_type1);\r\n        btn_type2 = findViewById(R.id.btn_type2);\r\n        btn_type3 = findViewById(R.id.btn_type3);\r\n\r\n        lin_price_month = findViewById(R.id.lin_price_month);\r\n\r\n        edit_apartment = findViewById(R.id.edit_apartment);\r\n        edit_dong = findViewById(R.id.edit_dong);\r\n        edit_ho = findViewById(R.id.edit_ho);\r\n        edit_area1 = findViewById(R.id.edit_area1);\r\n        edit_area2 = findViewById(R.id.edit_area2);\r\n        edit_price_all = findViewById(R.id.edit_price_all);\r\n        edit_price_month = findViewById(R.id.edit_price_month);\r\n        edit_price_manage = findViewById(R.id.edit_price_manage);\r\n        edit_room = findViewById(R.id.edit_room);\r\n        edit_toilet = findViewById(R.id.edit_toilet);\r\n        edit_introduce_short = findViewById(R.id.edit_introduce_short);\r\n        edit_introduce_long = findViewById(R.id.edit_introduce_long);\r\n        edit_introuce_apartment = findViewById(R.id.edit_introduce_apartment);\r\n        edit_introduce_livingroom = findViewById(R.id.edit_introduce_livingroom);\r\n        edit_introduce_kitchen = findViewById(R.id.edit_introduce_kitchen);\r\n        edit_introduce_room1 = findViewById(R.id.edit_introduce_room1);\r\n        edit_introduce_room2 = findViewById(R.id.edit_introduce_room2);\r\n        edit_introduce_room3 = findViewById(R.id.edit_introduce_room3);\r\n        edit_introduce_toilet1 = findViewById(R.id.edit_introduce_toilet1);\r\n        edit_introduce_toilet2 = findViewById(R.id.edit_introduce_toilet2);\r\n\r\n        tv_area1 = findViewById(R.id.tv_area1);\r\n        tv_area2 = findViewById(R.id.tv_area2);\r\n        tv_ratio1 = findViewById(R.id.tv_ratio1);\r\n        tv_ratio2 = findViewById(R.id.tv_ratio2);\r\n        tv_price_ratio1 = findViewById(R.id.tv_price_ratio1);\r\n        tv_price_ratio2 = findViewById(R.id.tv_price_ratio2);\r\n        tv_price_type = findViewById(R.id.tv_price_type);\r\n        tv_price_all = findViewById(R.id.tv_price_all);\r\n        tv_price_month = findViewById(R.id.tv_price_month);\r\n        tv_price_manage = findViewById(R.id.tv_price_manage);\r\n        tv_complete = findViewById(R.id.tv_complete);\r\n        tv_movedate = findViewById(R.id.tv_movedate);\r\n        tv_apartaddress_load = findViewById(R.id.tv_apartaddress_load);\r\n\r\n        slider_ratio1 = findViewById(R.id.slider_ratio1);\r\n        slider_ratio2 = findViewById(R.id.slider_ratio2);\r\n\r\n        chk_nego = findViewById(R.id.chk_nego);\r\n        chk_door = findViewById(R.id.chk_door);\r\n        chk_air = findViewById(R.id.chk_air);\r\n        chk_ref = findViewById(R.id.chk_ref);\r\n        chk_kimchi = findViewById(R.id.chk_kimchi);\r\n        chk_closet = findViewById(R.id.chk_closet);\r\n        chk_oven = findViewById(R.id.chk_oven);\r\n        chk_induction = findViewById(R.id.chk_induction);\r\n        chk_airsystem = findViewById(R.id.chk_airsystem);\r\n        chk_movenow = findViewById(R.id.chk_movenow);\r\n\r\n        btn_back.setOnClickListener(this);\r\n        btn_type1.setOnClickListener(this);\r\n        btn_type2.setOnClickListener(this);\r\n        btn_type3.setOnClickListener(this);\r\n        chk_nego.setOnClickListener(this);\r\n        chk_door.setOnClickListener(this);\r\n        chk_air.setOnClickListener(this);\r\n        chk_ref.setOnClickListener(this);\r\n        chk_kimchi.setOnClickListener(this);\r\n        chk_closet.setOnClickListener(this);\r\n        chk_oven.setOnClickListener(this);\r\n        chk_induction.setOnClickListener(this);\r\n        chk_airsystem.setOnClickListener(this);\r\n        chk_movenow.setOnClickListener(this);\r\n        tv_complete.setOnClickListener(this);\r\n        edit_apartment.setOnClickListener(this);\r\n        tv_movedate.setOnClickListener(this);\r\n\r\n        residence_type = \"A\";\r\n        sale_type = \"월세\";\r\n\r\n        nego = false;\r\n        air_conditioner = false;\r\n        middle_door = false;\r\n        refrigerator = false;\r\n        kimchi_refrigerator = false;\r\n        closet = false;\r\n\r\n        price_first = -1;\r\n        sale_price = -1L;\r\n\r\n        callbackMethod = new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                movedate = year + \"년 \" + month + \"월 \" + dayOfMonth + \"일\";\r\n                tv_movedate.setText(movedate);\r\n            }\r\n        };\r\n\r\n\r\n        edit_dong.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_dong.getText().toString().equals(\"\") || edit_dong.getText().toString() == null) {\r\n\r\n                } else {\r\n                    dong = Integer.parseInt(edit_dong.getText().toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_ho.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_ho.getText().toString().equals(\"\") || edit_ho.getText().toString() == null) {\r\n\r\n                } else {\r\n                    ho = Integer.parseInt(edit_ho.getText().toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_room.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_room.getText().toString().equals(\"\") || edit_room.getText().toString() == null) {\r\n\r\n                } else {\r\n                    room_num = Integer.parseInt(edit_room.getText().toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_toilet.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_toilet.getText().toString().equals(\"\") || edit_toilet.getText().toString() == null) {\r\n\r\n                } else {\r\n                    toilet_num = Integer.parseInt(edit_toilet.getText().toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_short.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_short.getText().toString().equals(\"\") || edit_introduce_short.getText().toString() == null) {\r\n\r\n                } else {\r\n                    short_description = edit_introduce_short.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_long.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_long.getText().toString().equals(\"\") || edit_introduce_long.getText().toString() == null) {\r\n\r\n                } else {\r\n                    long_description = edit_introduce_long.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introuce_apartment.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introuce_apartment.getText().toString().equals(\"\") || edit_introuce_apartment.getText().toString() == null) {\r\n\r\n                } else {\r\n                    apartment_description = edit_introuce_apartment.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_livingroom.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_livingroom.getText().toString().equals(\"\") || edit_introduce_livingroom.getText().toString() == null) {\r\n\r\n                } else {\r\n                    livingroom_description = edit_introduce_livingroom.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_kitchen.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_kitchen.getText().toString().equals(\"\") || edit_introduce_kitchen.getText().toString() == null) {\r\n\r\n                } else {\r\n                    kitchen_description = edit_introduce_kitchen.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_room1.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_room1.getText().toString().equals(\"\") || edit_introduce_room1.getText().toString() == null) {\r\n\r\n                } else {\r\n                    room1_description = edit_introduce_room1.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_room2.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_room2.getText().toString().equals(\"\") || edit_introduce_room2.getText().toString() == null) {\r\n\r\n                } else {\r\n                    room2_description = edit_introduce_room2.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_room3.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_room3.getText().toString().equals(\"\") || edit_introduce_room3.getText().toString() == null) {\r\n\r\n                } else {\r\n                    room3_description = edit_introduce_room3.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_toilet1.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_toilet1.getText().toString().equals(\"\") || edit_introduce_toilet1.getText().toString() == null) {\r\n\r\n                } else {\r\n                    toilet1_description = edit_introduce_toilet1.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_introduce_toilet2.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_introduce_toilet2.getText().toString().equals(\"\") || edit_introduce_toilet2.getText().toString() == null) {\r\n\r\n                } else {\r\n                    toilet2_description = edit_introduce_toilet2.getText().toString();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_area1.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_area1.getText().toString().equals(\"\") || edit_area1.getText().toString() == null) {\r\n                    tv_area1.setText(\"평수\");\r\n                } else {\r\n                    try {\r\n                        net_leaseable_area = Double.parseDouble(edit_area1.getText().toString().trim());\r\n                        tv_area1.setText(translateArea(net_leaseable_area));\r\n                    } catch (NumberFormatException e) {\r\n                        tv_area1.setText(\"평수\");\r\n                        Toast.makeText(getBaseContext(), \"숫자만 입력해주세요\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        edit_area2.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_area2.getText().toString().equals(\"\") || edit_area2.getText().toString() == null) {\r\n                    tv_area2.setText(\"평수\");\r\n                } else {\r\n                    try {\r\n                        leaseable_area = Double.parseDouble(edit_area2.getText().toString().trim());\r\n                        tv_area2.setText(translateArea(leaseable_area));\r\n                    } catch (NumberFormatException e) {\r\n                        tv_area2.setText(\"평수\");\r\n                        Toast.makeText(getBaseContext(), \"숫자만 입력해주세요\", Toast.LENGTH_SHORT).show();\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        edit_price_all.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_price_all.getText().toString().equals(\"\") || edit_price_all.getText().toString() == null) {\r\n                    tv_price_all.setText(\"가격\");\r\n                } else {\r\n                    sale_price = Long.parseLong(edit_price_all.getText().toString().trim());\r\n                    tv_price_all.setText(translatePrice(sale_price));\r\n                    tv_price_ratio1.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                    tv_price_ratio2.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        edit_price_month.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_price_month.getText().toString().equals(\"\") || edit_price_month.getText().toString() == null) {\r\n                    tv_price_month.setText(\"가격\");\r\n                } else {\r\n                    monthly_price = Long.parseLong(edit_price_month.getText().toString().trim());\r\n                    tv_price_month.setText(translatePrice(monthly_price));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        edit_price_manage.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (edit_price_manage.getText().toString().equals(\"\") || edit_price_manage.getText().toString() == null) {\r\n                    tv_price_manage.setText(\"가격\");\r\n                } else {\r\n                    admin_expenses = Long.parseLong(edit_price_manage.getText().toString().trim());\r\n                    tv_price_manage.setText(translatePrice(admin_expenses));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        slider_ratio1.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                if (sale_price == -1) {\r\n                    tv_price_ratio1.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                } else {\r\n                    List<Float> thumbs = slider.getValues();\r\n                    down_pay_per = Math.round(thumbs.get(0));\r\n                    intermediate_pay_per = Math.round(thumbs.get(1));\r\n                    intermediate_pay_per = intermediate_pay_per - down_pay_per;\r\n                    balance_per = 100 - down_pay_per - intermediate_pay_per;\r\n                    tv_ratio1.setText(down_pay_per + \"% : \" + intermediate_pay_per + \"% : \" + balance_per + \"%\");\r\n                    price_first = sale_price * down_pay_per / 100;\r\n                    price_second = sale_price * intermediate_pay_per / 100;\r\n                    price_third = sale_price * balance_per / 100;\r\n                    tv_price_ratio1.setText(\"계약금 : \" + translatePrice(price_first) + \"\\n중도금 : \" + translatePrice(price_second) + \"\\n    잔금 : \" + translatePrice(price_third));\r\n                    tv_price_ratio2.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                }\r\n            }\r\n        });\r\n        slider_ratio2.addOnChangeListener(new RangeSlider.OnChangeListener() {\r\n            @Override\r\n            public void onValueChange(@NonNull RangeSlider slider, float value, boolean fromUser) {\r\n                if (price_first == -1) {\r\n                    tv_price_ratio2.setText(\"슬라이더를 움직여서 상세금액을 확인해주세요\");\r\n                } else {\r\n                    List<Float> thumbs = slider.getValues();\r\n                    provisional_down_pay_per = Math.round(thumbs.get(0));\r\n                    long second = 100 - provisional_down_pay_per;\r\n                    tv_ratio2.setText(provisional_down_pay_per + \"% : \" + second + \"%\");\r\n                    long first = price_first * provisional_down_pay_per / 100;\r\n                    second = price_first * second / 100;\r\n                    tv_price_ratio2.setText(\"        가계약금 : \" + translatePrice(first) + \"\\n나머지 계약금 : \" + translatePrice(second));\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.N)\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.btn_back_upload:\r\n                onBackPressed();\r\n                break;\r\n\r\n            case R.id.btn_type1:\r\n                if (!sale_type.equals(\"월세\")) {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    lin_price_month.setVisibility(View.VISIBLE);\r\n                    tv_price_type.setText(\"보증금\");\r\n                    sale_type = \"월세\";\r\n                }\r\n                break;\r\n\r\n            case R.id.btn_type2:\r\n                if (!sale_type.equals(\"전세\")) {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    lin_price_month.setVisibility(View.GONE);\r\n                    tv_price_type.setText(\"전세금\");\r\n                    sale_type = \"전세\";\r\n                }\r\n                break;\r\n\r\n            case R.id.btn_type3:\r\n                if (!sale_type.equals(\"매매\")) {\r\n                    btn_type1.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type1.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type2.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_whitegray));\r\n                    btn_type2.setTextColor(AppCompatResources.getColorStateList(this, R.color.black));\r\n                    btn_type3.setBackgroundDrawable(ContextCompat.getDrawable(this, R.drawable.button_round_blue));\r\n                    btn_type3.setTextColor(AppCompatResources.getColorStateList(this, R.color.white));\r\n                    lin_price_month.setVisibility(View.GONE);\r\n                    tv_price_type.setText(\"매매가\");\r\n                    sale_type = \"매매\";\r\n                }\r\n                break;\r\n\r\n            case R.id.chk_nego:\r\n                if (chk_nego.isChecked()) {\r\n                    nego = true;\r\n                } else {\r\n                    nego = false;\r\n                }\r\n                break;\r\n            case R.id.chk_door:\r\n                if (chk_door.isChecked()) {\r\n                    middle_door = true;\r\n                } else {\r\n                    middle_door = false;\r\n                }\r\n                break;\r\n            case R.id.chk_air:\r\n                if (chk_air.isChecked()) {\r\n                    air_conditioner = true;\r\n                } else {\r\n                    air_conditioner = false;\r\n                }\r\n                break;\r\n            case R.id.chk_ref:\r\n                if (chk_ref.isChecked()) {\r\n                    refrigerator = true;\r\n                } else {\r\n                    refrigerator = false;\r\n                }\r\n                break;\r\n            case R.id.chk_kimchi:\r\n                if (chk_kimchi.isChecked()) {\r\n                    kimchi_refrigerator = true;\r\n                } else {\r\n                    kimchi_refrigerator = false;\r\n                }\r\n                break;\r\n            case R.id.chk_closet:\r\n                if (chk_closet.isChecked()) {\r\n                    closet = true;\r\n                } else {\r\n                    closet = false;\r\n                }\r\n                break;\r\n            case R.id.chk_oven:\r\n                if (chk_oven.isChecked()) {\r\n                    oven = true;\r\n                } else {\r\n                    oven = false;\r\n                }\r\n                break;\r\n            case R.id.chk_induction:\r\n                if (chk_induction.isChecked()) {\r\n                    induction = true;\r\n                } else {\r\n                    induction = false;\r\n                }\r\n                break;\r\n            case R.id.chk_airsystem:\r\n                if (chk_airsystem.isChecked()) {\r\n                    airsystem = true;\r\n                } else {\r\n                    airsystem = false;\r\n                }\r\n                break;\r\n\r\n            case R.id.tv_complete:\r\n                upload_dialog(view);\r\n                break;\r\n\r\n            case R.id.edit_apartment:\r\n                Intent intent = new Intent(getBaseContext(), SearchActivity_upload.class);\r\n                startActivityForResult(intent, 1);\r\n\r\n            case R.id.chk_movenow:\r\n                if (chk_movenow.isChecked()) {\r\n                    tv_movedate.setVisibility(View.GONE);\r\n                    movedate = \"즉시 입주\";\r\n                } else {\r\n                    tv_movedate.setVisibility(View.VISIBLE);\r\n                }\r\n                break;\r\n\r\n            case R.id.tv_movedate:\r\n                DatePickerDialog dialog = new DatePickerDialog(UploadActivity.this, callbackMethod, cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DATE));\r\n                dialog.show();\r\n        }\r\n    }\r\n\r\n\r\n    public String translatePrice(Long price) {\r\n\r\n        String a = \"\", b = \"\", c = \"\";\r\n        if (price == 0) {\r\n            return \"0원\";\r\n        }\r\n        if (price == -1) {\r\n            return \"무제한\";\r\n        }\r\n        if (price >= 100000000) {\r\n            Long price1 = price / 100000000;\r\n            price %= 100000000;\r\n            a = price1 + \"억 \";\r\n        }\r\n        if (price >= 10000) {\r\n            Long price2 = price / 10000;\r\n            price %= 10000;\r\n            b = price2 + \"만\";\r\n        }\r\n        if (price > 0) {\r\n            c = \" \" + price.toString();\r\n        }\r\n        return a + b + c + \"원\";\r\n    }\r\n\r\n    public String translateArea(Double area) {\r\n        area *= 0.3025;\r\n        area = Math.round(area * 10) / 10.0;\r\n        return area.toString() + \" 평\";\r\n    }\r\n\r\n    public void upload_dialog(View v) {\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_upload, null);\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(v.getContext());\r\n        builder.setView(dialogView);\r\n\r\n        final AlertDialog alertDialog = builder.create();\r\n        alertDialog.show();\r\n\r\n        Button ok_btn = dialogView.findViewById(R.id.btn_okay_dialog_upload);\r\n        ok_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n                userId = ((User) getApplication()).getId();\r\n                // todo : user 객채 만들어서 불러와야함\r\n\r\n                boolean judge_pic = models.get(2).getUri() != null && models.get(4).getUri() != null && models.get(5).getUri() != null && models.get(9).getUri() != null;\r\n                if (judge_pic) {\r\n                    pictures = new ArrayList<>();\r\n                    getPicturesList();\r\n                    mHouse = new House(userId, residence_name, address, sido, sigungoo, dongri, date, allnumber, parkingnumber, contact, code, dong, ho, net_leaseable_area, leaseable_area, residence_type, sale_type, sale_price, monthly_price, admin_expenses, provisional_down_pay_per, down_pay_per, intermediate_pay_per, balance_per, room_num, toilet_num, middle_door, air_conditioner, refrigerator, kimchi_refrigerator, closet, oven, induction, airsystem, nego, short_description, long_description, apartment_description, livingroom_description, kitchen_description, room1_description, room2_description, room3_description, toilet1_description, toilet2_description, movedate);\r\n                    doRetrofit();\r\n//                    Intent intent = new Intent(getBaseContext(), MainActivity.class);\r\n//                    startActivity(intent);\r\n                } else {\r\n                    Toast.makeText(UploadActivity.this, \"필수 사진을 등록해주세요\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                // todo : retrofit\r\n\r\n//                Intent intent = new Intent(getBaseContext(), MainActivity.class);\r\n//                startActivityForResult(intent,0);\r\n            }\r\n        });\r\n\r\n        Button cancle_btn = dialogView.findViewById(R.id.btn_no_dialog_upload);\r\n        cancle_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void doRetrofit() {\r\n\r\n        RESTApi mRESTApi = RESTApi.retrofit.create(RESTApi.class);\r\n        Log.d(\"beforeUploadActivity\", \"pictures\" + pictures);\r\n        mRESTApi.uploadHouse(mHouse.getUserId(), mHouse.getResidence_name(), mHouse.getCode(), mHouse.getAddress(), mHouse.getSido(), mHouse.getSigungoo(), mHouse.getDongri(), mHouse.getDate(), mHouse.getAllnumber(), mHouse.getParkingnumber(), mHouse.getContact(), mHouse.getDong(), mHouse.getHo(), mHouse.getNet_leaseable_area(), mHouse.getLeaseable_area(), mHouse.getResidence_type(), mHouse.getSale_type(), mHouse.getSale_price(), mHouse.getMonthly_price(), mHouse.getAdmin_expenses(), mHouse.getProvisional_down_pay_per(), mHouse.getDown_pay_per(), mHouse.getIntermediate_pay_per(), mHouse.getBalance_per(), mHouse.getRoom_num(), mHouse.getToilet_num(), mHouse.isMiddle_door(), mHouse.isAir_conditioner(), mHouse.isRefrigerator(), mHouse.isKimchi_refrigerator(), mHouse.isCloset(), mHouse.isOven(), mHouse.isInduction(), mHouse.isAirsystem(), mHouse.isNego(), mHouse.getShort_description(), mHouse.getLong_description(), mHouse.getApartment_description(), mHouse.getLivingroom_description(), mHouse.getKitchen_description(), mHouse.getRoom1_description(), mHouse.getRoom2_description(), mHouse.getRoom3_description(), mHouse.getToilet1_description(), mHouse.getToilet2_description(), mHouse.getMovedate(), pictures)\r\n                .enqueue(new Callback<ResponseBody>() {\r\n                    @Override\r\n                    public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\r\n                        Log.d(\"testtest\", \"\");\r\n                        String test_code = response.headers().get(\"code\");\r\n                        String test_body = response.headers().get(\"code\");\r\n                        Log.d(\"UploadActivity\", \"headercode\" + test_code);\r\n                        Log.d(\"UploadActivity\", \"body\" + test_body);\r\n                        Log.d(\"UploadActivity\", \"pictures\" + pictures);\r\n\r\n\r\n                        if (test_code != null && test_code.equals(\"00\")) {\r\n                            Intent intent = new Intent(UploadActivity.this, MainActivity.class);\r\n//                            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                            startActivity(intent);\r\n                            finish();\r\n                        } else {\r\n                            Toast.makeText(UploadActivity.this, \"업로드 실패\" + test_code, Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(Call<ResponseBody> call, Throwable throwable) {\r\n                        Log.d(\"UploadActivity\", throwable.getMessage());\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void getPicturesList() {\r\n        for (int i = 0; i < models.size(); i++) {\r\n            Uri uri = models.get(i).getUri();\r\n            if (uri != null) {\r\n                transUriToMultiPartFile(uri, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void transUriToMultiPartFile(Uri uri, int position) {\r\n        MultipartBody.Part filePart = null;\r\n        Bitmap img = null;\r\n\r\n        //change Uri to Bitmap\r\n        if (uri != null) {\r\n            try {\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\r\n                    img = ImageDecoder.decodeBitmap(ImageDecoder.createSource(getContentResolver(), uri));\r\n                } else {\r\n                    img = MediaStore.Images.Media.getBitmap(getContentResolver(), uri);\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            img = BitmapFactory.decodeResource(getResources(), R.drawable.preview);\r\n        }\r\n\r\n        try {\r\n\r\n            //Convert bitmap to byte array\r\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n            img.compress(Bitmap.CompressFormat.JPEG, 100 /*ignored for PNG*/, bos);\r\n            byte[] bitmapdata = bos.toByteArray();\r\n\r\n            //create a file to write bitmap data\r\n            File f = new File(this.getCacheDir(), \"filename\");\r\n            try {\r\n                f.createNewFile();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            //write the bytes in file\r\n            FileOutputStream fos = null;\r\n            try {\r\n                fos = new FileOutputStream(f);\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n            try {\r\n                fos.write(bitmapdata);\r\n                fos.flush();\r\n                fos.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            filePart = MultipartBody.Part.createFormData(\"file\",\r\n                    f.getName(), RequestBody.create(MediaType.parse(\"image/*\"), f));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        pictures.add(filePart);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == IMAGE_REQUEST) {\r\n            if (resultCode == RESULT_OK && data != null && data.getData() != null) {\r\n                imageUri = data.getData();\r\n\r\n                //set Image to mIvPicture\r\n                if (imageUri != null) {\r\n                    models.get(picture_clicked_position).setUri(imageUri);\r\n                    viewPager.setAdapter(adapter);\r\n                    //mIvPicture.setImageURI(imageUri);\r\n                }\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                Toast.makeText(this, \"사진 선택 취소\", Toast.LENGTH_LONG).show();\r\n            }\r\n\r\n            viewPager.setCurrentItem(picture_clicked_position, true);\r\n        }\r\n        if (requestCode == NAME_REQUEST) {\r\n            if (resultCode == RESULT_OK) {\r\n                code = data.getStringExtra(\"code\");\r\n                residence_name = data.getStringExtra(\"name\");\r\n                address = data.getStringExtra(\"address\");\r\n                sido = data.getStringExtra(\"sido\");\r\n                sigungoo = data.getStringExtra(\"sigungoo\");\r\n                dongri = data.getStringExtra(\"dongri\");\r\n                date = data.getStringExtra(\"date\");\r\n                allnumber = data.getStringExtra(\"allnumber\");\r\n                parkingnumber = data.getStringExtra(\"parkingnumber\");\r\n                contact = data.getStringExtra(\"contact\");\r\n\r\n\r\n                edit_apartment.setText(residence_name);\r\n                tv_apartaddress_load.setText(address);\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                Toast.makeText(this, \"아파트 선택 취소\", Toast.LENGTH_LONG).show();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(int value) {\r\n        picture_clicked_position = value;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/publicdatacompetition/UploadActivity.java	(revision 70e32352f29c09b958d58ca2cfe6cdd12491d7f1)
-+++ app/src/main/java/com/example/publicdatacompetition/UploadActivity.java	(date 1627357077207)
-@@ -64,7 +64,7 @@
-     private LinearLayout lin_price_month;
-     private TextInputEditText edit_dong, edit_ho, edit_area1, edit_area2, edit_price_all, edit_price_month, edit_price_manage,
-             edit_introduce_short, edit_introduce_long, edit_room, edit_toilet, edit_introduce_livingroom, edit_introduce_kitchen,
--            edit_introduce_room1, edit_introduce_room2, edit_introduce_room3, edit_introduce_toilet1, edit_introduce_toilet2, edit_introuce_apartment;
-+            edit_introduce_room1, edit_introduce_room2, edit_introduce_room3, edit_introduce_toilet1, edit_introduce_toilet2, edit_introduce_apartment;
-     private TextView tv_area1, tv_area2, tv_ratio1, tv_ratio2, tv_price_ratio1, tv_price_ratio2, tv_price_type, tv_price_all, tv_price_month, tv_price_manage, tv_complete, edit_apartment, tv_movedate, tv_apartaddress_load;
-     private RangeSlider slider_ratio1, slider_ratio2;
-     private CheckBox chk_nego, chk_door, chk_air, chk_ref, chk_kimchi, chk_closet, chk_oven, chk_induction, chk_airsystem, chk_movenow;
-@@ -204,7 +204,7 @@
-         edit_toilet = findViewById(R.id.edit_toilet);
-         edit_introduce_short = findViewById(R.id.edit_introduce_short);
-         edit_introduce_long = findViewById(R.id.edit_introduce_long);
--        edit_introuce_apartment = findViewById(R.id.edit_introduce_apartment);
-+        edit_introduce_apartment = findViewById(R.id.edit_introduce_apartment);
-         edit_introduce_livingroom = findViewById(R.id.edit_introduce_livingroom);
-         edit_introduce_kitchen = findViewById(R.id.edit_introduce_kitchen);
-         edit_introduce_room1 = findViewById(R.id.edit_introduce_room1);
-@@ -407,7 +407,7 @@
-             }
-         });
- 
--        edit_introuce_apartment.addTextChangedListener(new TextWatcher() {
-+        edit_introduce_apartment.addTextChangedListener(new TextWatcher() {
-             @Override
-             public void beforeTextChanged(CharSequence s, int start, int count, int after) {
- 
-@@ -415,10 +415,10 @@
- 
-             @Override
-             public void onTextChanged(CharSequence s, int start, int before, int count) {
--                if (edit_introuce_apartment.getText().toString().equals("") || edit_introuce_apartment.getText().toString() == null) {
-+                if (edit_introduce_apartment.getText().toString().equals("") || edit_introduce_apartment.getText().toString() == null) {
- 
-                 } else {
--                    apartment_description = edit_introuce_apartment.getText().toString();
-+                    apartment_description = edit_introduce_apartment.getText().toString();
-                 }
-             }
- 
-Index: app/src/main/java/com/example/publicdatacompetition/Model/House.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.publicdatacompetition.Model;\r\n\r\nimport java.util.List;\r\n\r\nimport okhttp3.MultipartBody;\r\n\r\npublic class House {\r\n    private String userId;//사용자 이름\r\n\r\n    private String residence_name;//아파트 이름\r\n    private String code;//아파트 코드\r\n    private String address;//도로명 주소\r\n    private String sido;//시도\r\n    private String sigungoo;//시군구\r\n    private String dongri;//동리\r\n    private String date;//사용승인일일\r\n    private String allnumber;//세대수\r\n    private String parkingnumber;//총주차대수\r\n    private String contact;//관리사무소 연락처\r\n\r\n    private Integer dong;//동\r\n    private Integer ho;//호수\r\n    private Double net_leaseable_area;//전용면적\r\n    private Double leaseable_area;//공급면적\r\n\r\n    private String residence_type;//매물 타입(A,V,O)\r\n    private String sale_type;//\"월세\",\"전세\",\"매매\"\r\n    private Long sale_price;//매매가/전세금/보증금\r\n    private Long monthly_price;//월세\r\n    private Long admin_expenses;//관리비\r\n\r\n    private Integer provisional_down_pay_per;//가계약금 비율\r\n    private Integer down_pay_per;//계약금 비율\r\n    private Integer intermediate_pay_per;//중도금 비율\r\n    private Integer balance_per;//잔금 비율\r\n\r\n    private Integer room_num;//방 개수\r\n    private Integer toilet_num;//욕실 개수\r\n\r\n    private boolean middle_door;//중문\r\n    private boolean air_conditioner;//시스템 에어컨\r\n    private boolean refrigerator;//냉장고\r\n    private boolean kimchi_refrigerator;//김치냉장고\r\n    private boolean closet;//붙박이장\r\n    private boolean oven;//빌트인 오븐\r\n    private boolean induction;//인덕션\r\n    private boolean airsystem;//공조기 시스템\r\n\r\n    private boolean nego;//네고가능\r\n\r\n    private String short_description;//짧은 집 소개\r\n    private String long_description;//긴 집 소개\r\n    private String apartment_description;//아파트 소개\r\n    private String livingroom_description;//거실 소개\r\n    private String kitchen_description;//주방 소개\r\n    private String room1_description;//방1 소개\r\n    private String room2_description;//방2 소개\r\n    private String room3_description;//방3 소개\r\n    private String toilet1_description;//화장실1 소개\r\n    private String toilet2_description;//화장실2 소개\r\n\r\n    private String movedate;//입주가능일\r\n//    private List<MultipartBody.Part> fileList;//매물 사진\r\n\r\n    public House() {\r\n\r\n    }\r\n\r\n    public House(String userId, String residence_name, String code, String address, String sido, String sigungoo, String dongri, String date, String allnumber, String parkingnumber, String contact, Integer dong, Integer ho, Double net_leaseable_area, Double leaseable_area, String residence_type, String sale_type, Long sale_price, Long monthly_price, Long admin_expenses, Integer provisional_down_pay_per, Integer down_pay_per, Integer intermediate_pay_per, Integer balance_per, Integer room_num, Integer toilet_num, boolean middle_door, boolean air_conditioner, boolean refrigerator, boolean kimchi_refrigerator, boolean closet, boolean oven, boolean induction, boolean airsystem, boolean nego, String short_description, String long_description, String apartment_description, String livingroom_description, String kitchen_description, String room1_description, String room2_description, String room3_description, String toilet1_description, String toilet2_description, String movedate) {\r\n        this.userId = userId;\r\n        this.residence_name = residence_name;\r\n        this.code = code;\r\n        this.address = address;\r\n        this.sido = sido;\r\n        this.sigungoo = sigungoo;\r\n        this.dongri = dongri;\r\n        this.date = date;\r\n        this.allnumber = allnumber;\r\n        this.parkingnumber = parkingnumber;\r\n        this.contact = contact;\r\n        this.dong = dong;\r\n        this.ho = ho;\r\n        this.net_leaseable_area = net_leaseable_area;\r\n        this.leaseable_area = leaseable_area;\r\n        this.residence_type = residence_type;\r\n        this.sale_type = sale_type;\r\n        this.sale_price = sale_price;\r\n        this.monthly_price = monthly_price;\r\n        this.admin_expenses = admin_expenses;\r\n        this.provisional_down_pay_per = provisional_down_pay_per;\r\n        this.down_pay_per = down_pay_per;\r\n        this.intermediate_pay_per = intermediate_pay_per;\r\n        this.balance_per = balance_per;\r\n        this.room_num = room_num;\r\n        this.toilet_num = toilet_num;\r\n        this.middle_door = middle_door;\r\n        this.air_conditioner = air_conditioner;\r\n        this.refrigerator = refrigerator;\r\n        this.kimchi_refrigerator = kimchi_refrigerator;\r\n        this.closet = closet;\r\n        this.oven = oven;\r\n        this.induction = induction;\r\n        this.airsystem = airsystem;\r\n        this.nego = nego;\r\n        this.short_description = short_description;\r\n        this.long_description = long_description;\r\n        this.apartment_description = apartment_description;\r\n        this.livingroom_description = livingroom_description;\r\n        this.kitchen_description = kitchen_description;\r\n        this.room1_description = room1_description;\r\n        this.room2_description = room2_description;\r\n        this.room3_description = room3_description;\r\n        this.toilet1_description = toilet1_description;\r\n        this.toilet2_description = toilet2_description;\r\n        this.movedate = movedate;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public String getSido() {\r\n        return sido;\r\n    }\r\n\r\n    public void setSido(String sido) {\r\n        this.sido = sido;\r\n    }\r\n\r\n    public String getSigungoo() {\r\n        return sigungoo;\r\n    }\r\n\r\n    public void setSigungoo(String sigungoo) {\r\n        this.sigungoo = sigungoo;\r\n    }\r\n\r\n    public String getDongri() {\r\n        return dongri;\r\n    }\r\n\r\n    public void setDongri(String dongri) {\r\n        this.dongri = dongri;\r\n    }\r\n\r\n    public String getDate() {\r\n        return date;\r\n    }\r\n\r\n    public void setDate(String date) {\r\n        this.date = date;\r\n    }\r\n\r\n    public String getAllnumber() {\r\n        return allnumber;\r\n    }\r\n\r\n    public void setAllnumber(String allnumber) {\r\n        this.allnumber = allnumber;\r\n    }\r\n\r\n    public String getParkingnumber() {\r\n        return parkingnumber;\r\n    }\r\n\r\n    public void setParkingnumber(String parkingnumber) {\r\n        this.parkingnumber = parkingnumber;\r\n    }\r\n\r\n    public String getContact() {\r\n        return contact;\r\n    }\r\n\r\n    public void setContact(String contact) {\r\n        this.contact = contact;\r\n    }\r\n\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    public String getResidence_name() {\r\n        return residence_name;\r\n    }\r\n\r\n    public void setResidence_name(String residence_name) {\r\n        this.residence_name = residence_name;\r\n    }\r\n\r\n    public String getCode() {\r\n        return code;\r\n    }\r\n\r\n    public void setCode(String code) {\r\n        this.code = code;\r\n    }\r\n\r\n    public Integer getDong() {\r\n        return dong;\r\n    }\r\n\r\n    public void setDong(Integer dong) {\r\n        this.dong = dong;\r\n    }\r\n\r\n    public Integer getHo() {\r\n        return ho;\r\n    }\r\n\r\n    public void setHo(Integer ho) {\r\n        this.ho = ho;\r\n    }\r\n\r\n    public Double getNet_leaseable_area() {\r\n        return net_leaseable_area;\r\n    }\r\n\r\n    public void setNet_leaseable_area(Double net_leaseable_area) {\r\n        this.net_leaseable_area = net_leaseable_area;\r\n    }\r\n\r\n    public Double getLeaseable_area() {\r\n        return leaseable_area;\r\n    }\r\n\r\n    public void setLeaseable_area(Double leaseable_area) {\r\n        this.leaseable_area = leaseable_area;\r\n    }\r\n\r\n    public String getResidence_type() {\r\n        return residence_type;\r\n    }\r\n\r\n    public void setResidence_type(String residence_type) {\r\n        this.residence_type = residence_type;\r\n    }\r\n\r\n    public String getSale_type() {\r\n        return sale_type;\r\n    }\r\n\r\n    public void setSale_type(String sale_type) {\r\n        this.sale_type = sale_type;\r\n    }\r\n\r\n    public Long getSale_price() {\r\n        return sale_price;\r\n    }\r\n\r\n    public void setSale_price(Long sale_price) {\r\n        this.sale_price = sale_price;\r\n    }\r\n\r\n    public Long getMonthly_price() {\r\n        return monthly_price;\r\n    }\r\n\r\n    public void setMonthly_price(Long monthly_price) {\r\n        this.monthly_price = monthly_price;\r\n    }\r\n\r\n    public Long getAdmin_expenses() {\r\n        return admin_expenses;\r\n    }\r\n\r\n    public void setAdmin_expenses(Long admin_expenses) {\r\n        this.admin_expenses = admin_expenses;\r\n    }\r\n\r\n    public Integer getProvisional_down_pay_per() {\r\n        return provisional_down_pay_per;\r\n    }\r\n\r\n    public void setProvisional_down_pay_per(Integer provisional_down_pay_per) {\r\n        this.provisional_down_pay_per = provisional_down_pay_per;\r\n    }\r\n\r\n    public Integer getDown_pay_per() {\r\n        return down_pay_per;\r\n    }\r\n\r\n    public void setDown_pay_per(Integer down_pay_per) {\r\n        this.down_pay_per = down_pay_per;\r\n    }\r\n\r\n    public Integer getIntermediate_pay_per() {\r\n        return intermediate_pay_per;\r\n    }\r\n\r\n    public void setIntermediate_pay_per(Integer intermediate_pay_per) {\r\n        this.intermediate_pay_per = intermediate_pay_per;\r\n    }\r\n\r\n    public Integer getBalance_per() {\r\n        return balance_per;\r\n    }\r\n\r\n    public void setBalance_per(Integer balance_per) {\r\n        this.balance_per = balance_per;\r\n    }\r\n\r\n    public Integer getRoom_num() {\r\n        return room_num;\r\n    }\r\n\r\n    public void setRoom_num(Integer room_num) {\r\n        this.room_num = room_num;\r\n    }\r\n\r\n    public Integer getToilet_num() {\r\n        return toilet_num;\r\n    }\r\n\r\n    public void setToilet_num(Integer toilet_num) {\r\n        this.toilet_num = toilet_num;\r\n    }\r\n\r\n    public boolean isMiddle_door() {\r\n        return middle_door;\r\n    }\r\n\r\n    public void setMiddle_door(boolean middle_door) {\r\n        this.middle_door = middle_door;\r\n    }\r\n\r\n    public boolean isAir_conditioner() {\r\n        return air_conditioner;\r\n    }\r\n\r\n    public void setAir_conditioner(boolean air_conditioner) {\r\n        this.air_conditioner = air_conditioner;\r\n    }\r\n\r\n    public boolean isRefrigerator() {\r\n        return refrigerator;\r\n    }\r\n\r\n    public void setRefrigerator(boolean refrigerator) {\r\n        this.refrigerator = refrigerator;\r\n    }\r\n\r\n    public boolean isKimchi_refrigerator() {\r\n        return kimchi_refrigerator;\r\n    }\r\n\r\n    public void setKimchi_refrigerator(boolean kimchi_refrigerator) {\r\n        this.kimchi_refrigerator = kimchi_refrigerator;\r\n    }\r\n\r\n    public boolean isCloset() {\r\n        return closet;\r\n    }\r\n\r\n    public void setCloset(boolean closet) {\r\n        this.closet = closet;\r\n    }\r\n\r\n    public boolean isOven() {\r\n        return oven;\r\n    }\r\n\r\n    public void setOven(boolean oven) {\r\n        this.oven = oven;\r\n    }\r\n\r\n    public boolean isInduction() {\r\n        return induction;\r\n    }\r\n\r\n    public void setInduction(boolean induction) {\r\n        this.induction = induction;\r\n    }\r\n\r\n    public boolean isAirsystem() {\r\n        return airsystem;\r\n    }\r\n\r\n    public void setAirsystem(boolean airsystem) {\r\n        this.airsystem = airsystem;\r\n    }\r\n\r\n    public boolean isNego() {\r\n        return nego;\r\n    }\r\n\r\n    public void setNego(boolean nego) {\r\n        this.nego = nego;\r\n    }\r\n\r\n    public String getShort_description() {\r\n        return short_description;\r\n    }\r\n\r\n    public void setShort_description(String short_description) {\r\n        this.short_description = short_description;\r\n    }\r\n\r\n    public String getLong_description() {\r\n        return long_description;\r\n    }\r\n\r\n    public void setLong_description(String long_description) {\r\n        this.long_description = long_description;\r\n    }\r\n\r\n    public String getApartment_description() {\r\n        return apartment_description;\r\n    }\r\n\r\n    public void setApartment_description(String apartment_description) {\r\n        this.apartment_description = apartment_description;\r\n    }\r\n\r\n    public String getLivingroom_description() {\r\n        return livingroom_description;\r\n    }\r\n\r\n    public void setLivingroom_description(String livingroom_description) {\r\n        this.livingroom_description = livingroom_description;\r\n    }\r\n\r\n    public String getKitchen_description() {\r\n        return kitchen_description;\r\n    }\r\n\r\n    public void setKitchen_description(String kitchen_description) {\r\n        this.kitchen_description = kitchen_description;\r\n    }\r\n\r\n    public String getRoom1_description() {\r\n        return room1_description;\r\n    }\r\n\r\n    public void setRoom1_description(String room1_description) {\r\n        this.room1_description = room1_description;\r\n    }\r\n\r\n    public String getRoom2_description() {\r\n        return room2_description;\r\n    }\r\n\r\n    public void setRoom2_description(String room2_description) {\r\n        this.room2_description = room2_description;\r\n    }\r\n\r\n    public String getRoom3_description() {\r\n        return room3_description;\r\n    }\r\n\r\n    public void setRoom3_description(String room3_description) {\r\n        this.room3_description = room3_description;\r\n    }\r\n\r\n    public String getToilet1_description() {\r\n        return toilet1_description;\r\n    }\r\n\r\n    public void setToilet1_description(String toilet1_description) {\r\n        this.toilet1_description = toilet1_description;\r\n    }\r\n\r\n    public String getToilet2_description() {\r\n        return toilet2_description;\r\n    }\r\n\r\n    public void setToilet2_description(String toilet2_description) {\r\n        this.toilet2_description = toilet2_description;\r\n    }\r\n\r\n    public String getMovedate() {\r\n        return movedate;\r\n    }\r\n\r\n    public void setMovedate(String movedate) {\r\n        this.movedate = movedate;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/publicdatacompetition/Model/House.java	(revision 70e32352f29c09b958d58ca2cfe6cdd12491d7f1)
-+++ app/src/main/java/com/example/publicdatacompetition/Model/House.java	(date 1627353077514)
-@@ -15,6 +15,7 @@
-     private String dongri;//동리
-     private String date;//사용승인일일
-     private String allnumber;//세대수
-+
-     private String parkingnumber;//총주차대수
-     private String contact;//관리사무소 연락처
- 
-Index: app/src/main/res/layout/upload_explain.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_margin=\"20dp\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"설명\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\"\r\n            android:textColor=\"@color/black\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"5dp\"\r\n            android:text=\"각 소개내용을 상세하게 적어주세요\"\r\n            android:textSize=\"10dp\"\r\n            android:textColor=\"@color/custom_blue\"/>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:text=\"아파트 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_apartment\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"위치, 주변 시설, 아파트 정원 등등 상세하게 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:text=\"거실 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_livingroom\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"베란다 확장 여부, 방향, 바닥재질 등등 상세하게 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"주방 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_kitchen\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"수납공간, 식탁 여부, 인테리어 등등 상세하게 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"1번 방 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_room1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"채광이나 방향, 벽지 상태 등등 상세하게 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"2번 방 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_room2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"채광이나 방향, 벽지 상태 등등 상세하게 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"3번 방 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_room3\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"방이 더 있을 경우 이 곳에 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"1번 화장실 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_toilet1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"수압, 환풍기 상태, 습식/건식 여부 등등 상세하게 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"2번 화장실 소개\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_toilet2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"화장실이 더 있을 경우 이 곳에 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"내 집 간단 요약!\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_short\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:maxLength=\"20\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"20자 이내의 한 줄 소개글을 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:text=\"내 집 자랑하기\"\r\n            android:textSize=\"15dp\"\r\n            android:fontFamily=\"@font/applesdgothicneob\" />\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/edit_introduce_long\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:textSize=\"12dp\"\r\n                android:hint=\"매물에 대한 추가 설명/자랑 할 내용들을 적어주세요\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n    </LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n</LinearLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/upload_explain.xml	(revision 70e32352f29c09b958d58ca2cfe6cdd12491d7f1)
-+++ app/src/main/res/layout/upload_explain.xml	(date 1627357077249)
-@@ -48,7 +48,7 @@
-                 android:layout_width="match_parent"
-                 android:layout_height="match_parent"
-                 android:textSize="12dp"
--                android:hint="위치, 주변 시설, 아파트 정원 등등 상세하게 적어주세요" />
-+                android:hint="위치, 주변 시설, 아파트 정원 등등 상세하게 적어주세요"/>
- 
-         </com.google.android.material.textfield.TextInputLayout>
- 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-26_오후_11_24_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-26_오후_11_24_[Default_Changelist]/shelved.patch	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-26_오후_11_24_[Default_Changelist]/shelved.patch	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
@@ -1,53 +0,0 @@
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/misc.xml	(revision 096a02997f743abd40e9e09e6c9454c65e5d1121)
-+++ .idea/misc.xml	(date 1627307208406)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-     <output url="file://$PROJECT_DIR$/build/classes" />
-   </component>
-   <component name="ProjectType">
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.publicdatacompetition\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:name=\".Model.User\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n\r\n        <activity android:name=\".SearchActivity_upload\"/>\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyC5222FEBgQ14yfr_a2bDRmkWYXS1AIpFU\" />\r\n\r\n        <activity android:name=\".LoginActivity\">\r\n\r\n        </activity>\r\n        <activity android:name=\".MainActivity\" />\r\n        <activity\r\n            android:name=\".JoinActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity\r\n            android:name=\".ResetPasswordActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity android:name=\".SettingActivity\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:parentActivityName=\".ChatListActivity\" />\r\n        <activity\r\n            android:name=\".ChatListActivity\"\r\n            android:parentActivityName=\".SettingActivity\" />\r\n        <activity android:name=\".ListActivity\" />\r\n        <activity android:name=\".MapActivity\" />\r\n        <activity android:name=\".UploadActivity\"/>\r\n        <activity android:name=\".FilterActivity\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SearchActivity\" />\r\n        <activity android:name=\".SidoActivity\" />\r\n        <activity android:name=\".SigunguActivity\" />\r\n        <activity android:name=\".HouseInfoActivity\" />\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision 096a02997f743abd40e9e09e6c9454c65e5d1121)
-+++ app/src/main/AndroidManifest.xml	(date 1627307208383)
-@@ -25,7 +25,11 @@
-             android:value="AIzaSyC5222FEBgQ14yfr_a2bDRmkWYXS1AIpFU" />
- 
-         <activity android:name=".LoginActivity">
-+            <intent-filter>
-+                <action android:name="android.intent.action.MAIN" />
- 
-+                <category android:name="android.intent.category.LAUNCHER" />
-+            </intent-filter>
-         </activity>
-         <activity android:name=".MainActivity" />
-         <activity
-@@ -44,13 +48,7 @@
-         <activity android:name=".ListActivity" />
-         <activity android:name=".MapActivity" />
-         <activity android:name=".UploadActivity"/>
--        <activity android:name=".FilterActivity" >
--            <intent-filter>
--                <action android:name="android.intent.action.MAIN" />
--
--                <category android:name="android.intent.category.LAUNCHER" />
--            </intent-filter>
--        </activity>
-+        <activity android:name=".FilterActivity" />
-         <activity android:name=".SearchActivity" />
-         <activity android:name=".SidoActivity" />
-         <activity android:name=".SigunguActivity" />
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-26__11_24__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-26__11_24__Default_Changelist_.xml	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-26__11_24__Default_Changelist_.xml	(revision 2ac049413e05a6715c6f3d63d88cf413f16da25d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2021-07-26_오후_11_24_[Default_Changelist]" date="1627309448596" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021-07-26_오후_11_24_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2021-07-26 오후 11:24 [Default Changelist]" />
-</changelist>
\ No newline at end of file
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-08-01__7_44__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-08-01__7_44__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-08-01__7_44__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-08-01__7_44__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-31__3_07__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-31__3_07__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-08-01__4_40__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-08-01__4_40__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__10_15__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-27__10_15__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-29__11_13__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-29__11_13__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_7_26_2021_8_38_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_7_26_2021_8_38_PM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-29__8_48__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-29__8_48__Default_Changelist_.xml
