Index: app/src/main/java/com/example/publicdatacompetition/Model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition.Model;\r\n\r\npublic class User {\r\n    String id;\r\n    String username;\r\n    String nickname;\r\n    String phone;\r\n    String imageURL;\r\n    String status;\r\n    String search;\r\n\r\n    public User(String id, String username, String nickname, String phone, String imageURL, String status, String search) {\r\n        this.id = id;\r\n        this.username = username;\r\n        this.nickname = nickname;\r\n        this.phone = phone;\r\n        this.imageURL = imageURL;\r\n        this.status = status;\r\n        this.search = search;\r\n    }\r\n\r\n    public User() {\r\n\r\n    }\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public String getNickname() {\r\n        return nickname;\r\n    }\r\n\r\n    public void setNickname(String nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public String getPhone() {\r\n        return phone;\r\n    }\r\n\r\n    public void setPhone(String phone) {\r\n        this.phone = phone;\r\n    }\r\n\r\n    public String getImageURL() {\r\n        return imageURL;\r\n    }\r\n\r\n    public void setImageURL(String imageURL) {\r\n        this.imageURL = imageURL;\r\n    }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public String getSearch() {\r\n        return search;\r\n    }\r\n\r\n    public void setSearch(String search) {\r\n        this.search = search;\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/Model/User.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/Model/Chatter.java	(date 1627298460093)
@@ -1,26 +1,21 @@
 package com.example.publicdatacompetition.Model;
 
-public class User {
+public class Chatter {
     String id;
-    String username;
     String nickname;
     String phone;
     String imageURL;
-    String status;
     String search;
 
-    public User(String id, String username, String nickname, String phone, String imageURL, String status, String search) {
+    public Chatter(String id, String nickname, String phone, String imageURL, String search) {
         this.id = id;
-        this.username = username;
         this.nickname = nickname;
         this.phone = phone;
         this.imageURL = imageURL;
-        this.status = status;
         this.search = search;
     }
 
-    public User() {
-
+    public Chatter() {
     }
 
     public String getId() {
@@ -31,14 +26,6 @@
         this.id = id;
     }
 
-    public String getUsername() {
-        return username;
-    }
-
-    public void setUsername(String username) {
-        this.username = username;
-    }
-
     public String getNickname() {
         return nickname;
     }
@@ -63,14 +50,6 @@
         this.imageURL = imageURL;
     }
 
-    public String getStatus() {
-        return status;
-    }
-
-    public void setStatus(String status) {
-        this.status = status;
-    }
-
     public String getSearch() {
         return search;
     }
Index: app/src/main/res/layout/user_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:padding=\"10dp\">\r\n\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:id=\"@+id/profile_image\"\r\n        android:layout_width=\"50dp\"\r\n        android:layout_height=\"50dp\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:src=\"@mipmap/ic_launcher\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/username\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintLeft_toRightOf=\"@id/profile_image\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        android:text=\"username\"\r\n        android:textSize=\"20sp\"/>\r\n\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:id=\"@+id/img_on\"\r\n        android:layout_width=\"15dp\"\r\n        android:layout_height=\"15dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/profile_image\"\r\n        app:layout_constraintRight_toRightOf=\"@id/profile_image\"\r\n        android:src=\"@mipmap/ic_launcher\"\r\n        app:civ_border_color=\"#05df29\"\r\n        app:civ_border_width=\"10dp\"\r\n        android:visibility=\"gone\"/>\r\n\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:id=\"@+id/img_off\"\r\n        android:layout_width=\"15dp\"\r\n        android:layout_height=\"15dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/profile_image\"\r\n        app:layout_constraintRight_toRightOf=\"@id/profile_image\"\r\n        android:src=\"@mipmap/ic_launcher\"\r\n        app:civ_border_color=\"#dfdfdf\"\r\n        app:civ_border_width=\"10dp\"\r\n        android:visibility=\"gone\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/last_msg\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/username\"\r\n        app:layout_constraintLeft_toRightOf=\"@id/profile_image\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:textColor=\"@color/purple_500\"\r\n        android:maxLines=\"1\"/>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
===================================================================
--- app/src/main/res/layout/user_item.xml	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/res/layout/item_chat_list.xml	(date 1627298460087)
@@ -1,61 +1,112 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
+<RelativeLayout
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:padding="10dp">
+    android:layout_height="85dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal">
 
-    <de.hdodenhof.circleimageview.CircleImageView
-        android:id="@+id/profile_image"
-        android:layout_width="50dp"
-        android:layout_height="50dp"
-        app:layout_constraintLeft_toLeftOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        android:layout_centerVertical="true"
-        android:src="@mipmap/ic_launcher"/>
+        <de.hdodenhof.circleimageview.CircleImageView
+            android:id="@+id/chat_list_profile_image"
+            android:layout_width="54dp"
+            android:layout_height="54dp"
+            android:layout_marginLeft="14dp"
+            android:layout_gravity="center_vertical"
+            android:src="@drawable/preview"
+            app:civ_border_width="0.5dp"
+            app:civ_border_color="@color/dark_gray"/>
+
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:layout_marginLeft="14dp"
+            android:layout_marginRight="6dp"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="0dp"
+                android:layout_weight="1"
+                android:orientation="horizontal">
 
-    <TextView
-        android:id="@+id/username"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintLeft_toRightOf="@id/profile_image"
-        android:layout_marginLeft="10dp"
-        android:text="username"
-        android:textSize="20sp"/>
-
-    <de.hdodenhof.circleimageview.CircleImageView
-        android:id="@+id/img_on"
-        android:layout_width="15dp"
-        android:layout_height="15dp"
-        app:layout_constraintBottom_toBottomOf="@id/profile_image"
-        app:layout_constraintRight_toRightOf="@id/profile_image"
-        android:src="@mipmap/ic_launcher"
-        app:civ_border_color="#05df29"
-        app:civ_border_width="10dp"
-        android:visibility="gone"/>
-
-    <de.hdodenhof.circleimageview.CircleImageView
-        android:id="@+id/img_off"
-        android:layout_width="15dp"
-        android:layout_height="15dp"
-        app:layout_constraintBottom_toBottomOf="@id/profile_image"
-        app:layout_constraintRight_toRightOf="@id/profile_image"
-        android:src="@mipmap/ic_launcher"
-        app:civ_border_color="#dfdfdf"
-        app:civ_border_width="10dp"
-        android:visibility="gone"/>
+                <TextView
+                    android:id="@+id/chat_list_nickname"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="bottom"
+                    android:text="이름"
+                    android:textSize="19sp"
+                    android:textColor="@color/text_black"
+                    android:fontFamily="@font/applesdgothicneoeb"/>
 
-    <TextView
-        android:id="@+id/last_msg"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:layout_constraintTop_toBottomOf="@id/username"
-        app:layout_constraintLeft_toRightOf="@id/profile_image"
-        android:layout_marginLeft="15dp"
-        android:layout_marginTop="5dp"
-        android:textColor="@color/purple_500"
-        android:maxLines="1"/>
+                <TextView
+                    android:id="@+id/chat_list_date"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="bottom"
+                    android:layout_marginLeft="8dp"
+                    android:layout_marginBottom="1dp"
+                    android:text="07월 24일"
+                    android:textSize="16sp"
+                    android:textColor="@color/text_gray"
+                    android:fontFamily="@font/applesdgothicneom"
+                    android:maxLines="1"/>
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+            </LinearLayout>
+
+            <TextView
+                android:id="@+id/chat_list_last_msg"
+                android:layout_width="wrap_content"
+                android:layout_height="0dp"
+                android:layout_weight="1"
+                android:layout_marginTop="3dp"
+                android:text="마지막 메시지"
+                android:textSize="18.5sp"
+                android:textColor="@color/black"
+                android:fontFamily="@font/applesdgothicneol"
+                android:maxLines="1"
+                android:ellipsize="end"/>
+
+        </LinearLayout>
+
+        <RelativeLayout
+            android:layout_width="60dp"
+            android:layout_height="60dp"
+            android:layout_gravity="center_vertical"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp">
+
+            <ImageView
+                android:id="@+id/chat_list_img_house"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/round_backgroud"
+                android:visibility="gone"/>
+
+            <TextView
+                android:id="@+id/chat_list_not_read"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/blue_circle"
+                android:text="1"
+                android:textSize="19sp"
+                android:textColor="@color/text_white"
+                android:gravity="center"
+                android:fontFamily="@font/applesdgothicneoeb"
+                android:visibility="gone"/>
+
+        </RelativeLayout>
+    </LinearLayout>
+
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="0.5dp"
+        android:background="@color/text_gray"
+        android:layout_alignParentBottom="true"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/publicdatacompetition/Adapter/UserAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition.Adapter;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.publicdatacompetition.MessageActivity;\r\nimport com.example.publicdatacompetition.Model.Chat;\r\nimport com.example.publicdatacompetition.Model.User;\r\nimport com.example.publicdatacompetition.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.List;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class UserAdapter extends RecyclerView.Adapter<UserAdapter.ViewHolder> {\r\n\r\n    private Context mContext;\r\n    private List<User> mUsers;\r\n\r\n    private String theLastMessage;\r\n\r\n    public UserAdapter(Context mContext, List<User> mUsers){\r\n        this.mContext = mContext;\r\n        this.mUsers = mUsers;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(mContext).inflate(R.layout.user_item, parent, false);\r\n        return new UserAdapter.ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n\r\n        User user = mUsers.get(position);\r\n        holder.username.setText(user.getUsername());\r\n        if(user.getImageURL().equals(\"default\")){\r\n            holder.profile_image.setImageResource(R.drawable.preview);\r\n        } else {\r\n            Glide.with(mContext).load(user.getImageURL()).into(holder.profile_image);\r\n        }\r\n\r\n        lastMessage(user.getId(), holder.last_msg);\r\n\r\n//        if(user.getStatus().equals(\"online\")) {\r\n//            holder.img_on.setVisibility(View.VISIBLE);\r\n//            holder.img_off.setVisibility(View.GONE);\r\n//        } else {\r\n//            holder.img_on.setVisibility(View.GONE);\r\n//            holder.img_off.setVisibility(View.VISIBLE);\r\n//        }\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(mContext, MessageActivity.class);\r\n                intent.putExtra(\"userid\", user.getId());\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                mContext.startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mUsers.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        public TextView username;\r\n        public ImageView profile_image;\r\n//        public CircleImageView img_on;\r\n//        public CircleImageView img_off;\r\n        public TextView last_msg;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            username = itemView.findViewById(R.id.username);\r\n            profile_image = itemView.findViewById(R.id.profile_image);\r\n//            img_on = itemView.findViewById(R.id.img_on);\r\n//            img_off = itemView.findViewById(R.id.img_off);\r\n            last_msg = itemView.findViewById(R.id.last_msg);\r\n        }\r\n    }\r\n\r\n    //check for last message\r\n    private void lastMessage(String userid, TextView last_msg) {\r\n\r\n        theLastMessage = \"default\";\r\n\r\n        FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Chats\");\r\n\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for(DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                    Chat chat = dataSnapshot.getValue(Chat.class);\r\n\r\n                    if(chat.getReceiver().equals(firebaseUser.getUid()) && chat.getSender().equals(userid) ||\r\n                            chat.getReceiver().equals(userid) && chat.getSender().equals(firebaseUser.getUid())){\r\n                        theLastMessage = chat.getMessage();\r\n                    }\r\n                }\r\n\r\n                if(theLastMessage.equals(\"default\")) {\r\n                    last_msg.setText(\"\");\r\n                } else {\r\n                    last_msg.setText(theLastMessage);\r\n                }\r\n\r\n                theLastMessage = \"default\";\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/Adapter/UserAdapter.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/Adapter/ChatListAdapter.java	(date 1627298460072)
@@ -12,9 +12,9 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
-import com.example.publicdatacompetition.MessageActivity;
+import com.example.publicdatacompetition.ChatActivity;
 import com.example.publicdatacompetition.Model.Chat;
-import com.example.publicdatacompetition.Model.User;
+import com.example.publicdatacompetition.Model.Chatter;
 import com.example.publicdatacompetition.R;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
@@ -28,51 +28,45 @@
 
 import de.hdodenhof.circleimageview.CircleImageView;
 
-public class UserAdapter extends RecyclerView.Adapter<UserAdapter.ViewHolder> {
+public class ChatListAdapter extends RecyclerView.Adapter<ChatListAdapter.ViewHolder> {
 
     private Context mContext;
-    private List<User> mUsers;
+    private List<Chatter> mChatters;
 
     private String theLastMessage;
+    private String theLastDateOrTime;
 
-    public UserAdapter(Context mContext, List<User> mUsers){
+    public ChatListAdapter(Context mContext, List<Chatter> mChatters){
         this.mContext = mContext;
-        this.mUsers = mUsers;
+        this.mChatters = mChatters;
     }
 
     @NonNull
     @Override
     public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-        View view = LayoutInflater.from(mContext).inflate(R.layout.user_item, parent, false);
-        return new UserAdapter.ViewHolder(view);
+        View view = LayoutInflater.from(mContext).inflate(R.layout.item_chat_list, parent, false);
+        return new ChatListAdapter.ViewHolder(view);
     }
 
     @Override
     public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
 
-        User user = mUsers.get(position);
-        holder.username.setText(user.getUsername());
-        if(user.getImageURL().equals("default")){
+        Chatter chatter = mChatters.get(position);
+
+        holder.nickname.setText(chatter.getNickname());
+        if(chatter.getImageURL().equals("default")){
             holder.profile_image.setImageResource(R.drawable.preview);
         } else {
-            Glide.with(mContext).load(user.getImageURL()).into(holder.profile_image);
+            Glide.with(mContext).load(chatter.getImageURL()).into(holder.profile_image);
         }
 
-        lastMessage(user.getId(), holder.last_msg);
-
-//        if(user.getStatus().equals("online")) {
-//            holder.img_on.setVisibility(View.VISIBLE);
-//            holder.img_off.setVisibility(View.GONE);
-//        } else {
-//            holder.img_on.setVisibility(View.GONE);
-//            holder.img_off.setVisibility(View.VISIBLE);
-//        }
+        lastMessage(chatter.getId(), holder.last_msg);
 
         holder.itemView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = new Intent(mContext, MessageActivity.class);
-                intent.putExtra("userid", user.getId());
+                Intent intent = new Intent(mContext, ChatActivity.class);
+                intent.putExtra("nickname", chatter.getId());
                 intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 mContext.startActivity(intent);
             }
@@ -81,25 +75,27 @@
 
     @Override
     public int getItemCount() {
-        return mUsers.size();
+        return mChatters.size();
     }
 
     public class ViewHolder extends RecyclerView.ViewHolder{
 
-        public TextView username;
-        public ImageView profile_image;
-//        public CircleImageView img_on;
-//        public CircleImageView img_off;
+        public CircleImageView profile_image;
+        public TextView nickname;
+        public TextView date;
         public TextView last_msg;
+        public ImageView house_image;
+        public TextView not_read;
 
         public ViewHolder(@NonNull View itemView) {
             super(itemView);
 
-            username = itemView.findViewById(R.id.username);
-            profile_image = itemView.findViewById(R.id.profile_image);
-//            img_on = itemView.findViewById(R.id.img_on);
-//            img_off = itemView.findViewById(R.id.img_off);
-            last_msg = itemView.findViewById(R.id.last_msg);
+            profile_image = itemView.findViewById(R.id.chat_list_profile_image);
+            nickname = itemView.findViewById(R.id.chat_list_nickname);
+            date = itemView.findViewById(R.id.chat_list_date);
+            last_msg = itemView.findViewById(R.id.chat_list_last_msg);
+            house_image = itemView.findViewById(R.id.chat_list_img_house);
+            not_read = itemView.findViewById(R.id.chat_list_not_read);
         }
     }
 
@@ -107,6 +103,7 @@
     private void lastMessage(String userid, TextView last_msg) {
 
         theLastMessage = "default";
+        theLastDateOrTime = "default";
 
         FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
         DatabaseReference reference = FirebaseDatabase.getInstance().getReference("Chats");
Index: app/src/main/java/com/example/publicdatacompetition/MessageActivity.java
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/MessageActivity.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/MessageActivity.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
@@ -1,248 +0,0 @@
-package com.example.publicdatacompetition;
-
-import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.appcompat.widget.Toolbar;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.EditText;
-import android.widget.ImageButton;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.bumptech.glide.Glide;
-import com.example.publicdatacompetition.Adapter.MessageAdapter;
-import com.example.publicdatacompetition.Model.Chat;
-import com.example.publicdatacompetition.Model.User;
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.ValueEventListener;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-
-import de.hdodenhof.circleimageview.CircleImageView;
-
-public class MessageActivity extends AppCompatActivity {
-
-    private CircleImageView profile_image;
-    private TextView username;
-    private EditText text_send;
-    private ImageButton btn_send;
-
-    private String userid;
-
-    private RecyclerView recyclerView;
-
-    private FirebaseUser fuser;
-    private DatabaseReference reference;
-
-    private Intent intent;
-
-    private List<Chat> mchat;
-
-    private ValueEventListener seenListener;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_message);
-
-        Toolbar toolbar = findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-        getSupportActionBar().setTitle("");
-        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(MessageActivity.this, ChatActivity.class).setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));
-            }
-        });
-
-        recyclerView = findViewById(R.id.recyelr_view);
-        recyclerView.setHasFixedSize(true);
-        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getApplicationContext());
-        linearLayoutManager.setStackFromEnd(true);
-        recyclerView.setLayoutManager(linearLayoutManager);
-
-        profile_image = findViewById(R.id.profile_image);
-        username = findViewById(R.id.username);
-        text_send = findViewById(R.id.text_send);
-        btn_send = findViewById(R.id.btn_send);
-
-        intent = getIntent();
-        userid = intent.getStringExtra("userid");
-        fuser = FirebaseAuth.getInstance().getCurrentUser();
-
-        btn_send.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                String msg = text_send.getText().toString();
-                if(!msg.equals("")){
-                    sendMessage(fuser.getUid(), userid, msg);
-                } else{
-                    Toast.makeText(MessageActivity.this, "메세지를 입력해주세요", Toast.LENGTH_SHORT).show();
-                }
-                text_send.setText("");
-            }
-        });
-
-        reference = FirebaseDatabase.getInstance().getReference("Users").child(userid);
-
-        reference.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                User user = snapshot.getValue(User.class);
-                username.setText(user.getUsername());
-                if(user.getImageURL().equals("default")) {
-                    profile_image.setImageResource(R.drawable.preview);
-                } else {
-                    Glide.with(getApplicationContext()).load(user.getImageURL()).into(profile_image);
-                }
-
-                readMessage(fuser.getUid(), userid, user.getImageURL());
-            }
-
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-
-            }
-        });
-
-        seenMessage(userid);
-    }
-
-    private void seenMessage(String userid) {
-
-        reference = FirebaseDatabase.getInstance().getReference("Chats");
-        seenListener = reference.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                for(DataSnapshot dataSnapshot : snapshot.getChildren()) {
-                    Chat chat = dataSnapshot.getValue(Chat.class);
-
-                    if(chat.getReceiver().equals(fuser.getUid()) && chat.getSender().equals(userid)) {
-                        HashMap<String, Object> hashMap = new HashMap<>();
-                        hashMap.put("isseen", true);
-                        dataSnapshot.getRef().updateChildren(hashMap);
-                    }
-                }
-            }
-
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-
-            }
-        });
-    }
-
-    private void sendMessage(String sender, String receiver, String message){
-
-        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-
-        HashMap<String, Object> hashMap = new HashMap<>();
-        hashMap.put("sender", sender);
-        hashMap.put("receiver", receiver);
-        hashMap.put("message", message);
-        hashMap.put("isseen", false);
-
-        reference.child("Chats").push().setValue(hashMap);
-
-        //add user to chat fragment
-         final DatabaseReference chatRef = FirebaseDatabase.getInstance().getReference("Chatlist")
-                .child(fuser.getUid())
-                .child(userid);
-
-        chatRef.addListenerForSingleValueEvent(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                if(!snapshot.exists()) {
-                    chatRef.child("id").setValue(userid);
-                }
-            }
-
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-
-            }
-        });
-
-        final DatabaseReference chatRefRev = FirebaseDatabase.getInstance().getReference("Chatlist")
-                .child(userid)
-                .child(fuser.getUid());
-
-        chatRefRev.addListenerForSingleValueEvent(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                if(!snapshot.exists()) {
-                    chatRefRev.child("id").setValue(fuser.getUid());
-                }
-            }
-
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-
-            }
-        });
-    }
-
-    private void readMessage(final String myid, final String userid, final String imageurl){
-        mchat = new ArrayList<>();
-
-        reference = FirebaseDatabase.getInstance().getReference("Chats");
-
-        reference.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                mchat.clear();
-                for(DataSnapshot dataSnapshot : snapshot.getChildren()){
-                    Chat chat = dataSnapshot.getValue(Chat.class);
-                    if(chat.getReceiver().equals(myid) && chat.getSender().equals(userid) ||
-                            chat.getReceiver().equals(userid) && chat.getSender().equals(myid)) {
-                        mchat.add(chat);
-                    }
-
-                    MessageAdapter messageAdapter = new MessageAdapter(MessageActivity.this, mchat, imageurl);
-                    recyclerView.setAdapter(messageAdapter);
-                }
-            }
-
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-
-            }
-        });
-    }
-
-    private void status(String status){
-
-        reference = FirebaseDatabase.getInstance().getReference("Users").child(fuser.getUid());
-
-        HashMap<String, Object> hashMap = new HashMap<>();
-        hashMap.put("status", status);
-
-        reference.updateChildren(hashMap);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        status("online");
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-        reference.removeEventListener(seenListener);
-        status("offline");
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_message.xml
===================================================================
--- app/src/main/res/layout/activity_message.xml	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/res/layout/activity_message.xml	(revision c7193de7e46eb58a9bfd513006d4496367346624)
@@ -1,72 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".MessageActivity">
-
-    <com.google.android.material.appbar.AppBarLayout
-        android:id="@+id/bar_layout"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
-
-        <androidx.appcompat.widget.Toolbar
-            android:id="@+id/toolbar"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:background="@color/purple_500">
-
-            <de.hdodenhof.circleimageview.CircleImageView
-                android:id="@+id/profile_image"
-                android:layout_width="30dp"
-                android:layout_height="30dp"/>
-
-            <TextView
-                android:id="@+id/username"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="25dp"
-                android:text="username"
-                android:textColor="#fff"
-                android:textStyle="bold"/>
-
-        </androidx.appcompat.widget.Toolbar>
-
-    </com.google.android.material.appbar.AppBarLayout>
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/recyelr_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_below="@id/bar_layout"
-        android:layout_above="@id/bottom"/>
-
-    <RelativeLayout
-        android:id="@+id/bottom"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="5dp"
-        android:background="#fff"
-        android:layout_alignParentBottom="true">
-
-        <EditText
-            android:id="@+id/text_send"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_toLeftOf="@id/btn_send"
-            android:layout_centerVertical="true"
-            android:background="@android:color/transparent"
-            android:hint="Type a message..."/>
-
-        <ImageButton
-            android:id="@+id/btn_send"
-            android:layout_width="50dp"
-            android:layout_height="50dp"
-            android:layout_alignParentRight="true"
-            android:background="@drawable/send"/>
-
-    </RelativeLayout>
-
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/round_backgroud.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/round_backgroud.xml	(date 1627297489708)
+++ app/src/main/res/drawable/round_backgroud.xml	(date 1627297489708)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <solid android:color="@color/black"/>
+
+    <corners android:radius="6dp"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/blue_circle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/blue_circle.xml	(date 1627295669636)
+++ app/src/main/res/drawable/blue_circle.xml	(date 1627295669636)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="ring"
+    android:innerRadius="0dp"
+    android:thickness="15dp"
+    android:useLevel="false">
+
+    <solid android:color="@color/custom_blue" />
+</shape>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.publicdatacompetition\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".SearchActivity_upload\"/>\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyC5222FEBgQ14yfr_a2bDRmkWYXS1AIpFU\" />\r\n\r\n        <activity android:name=\".LoginActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".MainActivity\" />\r\n        <activity\r\n            android:name=\".JoinActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity\r\n            android:name=\".ResetPasswordActivity\"\r\n            android:parentActivityName=\".LoginActivity\" />\r\n        <activity android:name=\".SettingActivity\" />\r\n        <activity\r\n            android:name=\".MessageActivity\"\r\n            android:parentActivityName=\".ChatActivity\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:parentActivityName=\".SettingActivity\" />\r\n        <activity android:name=\".ListActivity\" />\r\n        <activity android:name=\".MapActivity\" />\r\n        <activity android:name=\".UploadActivity\"/>\r\n        <activity android:name=\".FilterActivity\" />\r\n        <activity android:name=\".SearchActivity\" />\r\n        <activity android:name=\".SidoActivity\" />\r\n        <activity android:name=\".SigunguActivity\" />\r\n        <activity android:name=\".HouseInfoActivity\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/AndroidManifest.xml	(date 1627293744542)
@@ -38,10 +38,10 @@
             android:parentActivityName=".LoginActivity" />
         <activity android:name=".SettingActivity" />
         <activity
-            android:name=".MessageActivity"
-            android:parentActivityName=".ChatActivity" />
-        <activity
             android:name=".ChatActivity"
+            android:parentActivityName=".ChatListActivity" />
+        <activity
+            android:name=".ChatListActivity"
             android:parentActivityName=".SettingActivity" />
         <activity android:name=".ListActivity" />
         <activity android:name=".MapActivity" />
Index: app/src/main/java/com/example/publicdatacompetition/SearchActivity_upload.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.publicdatacompetition.Adapter.RecyclerViewAdapter_Search;\r\nimport com.example.publicdatacompetition.Model.item_search_name;\r\nimport com.opencsv.CSVReader;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SearchActivity_upload extends AppCompatActivity {\r\n\r\n    ArrayList<item_search_name> arr = null;\r\n    private RecyclerViewAdapter_Search adapter;\r\n    private RecyclerView recyclerView;\r\n    private LinearLayoutManager manager;\r\n    private String search;\r\n\r\n    private EditText edit_search;\r\n    private ImageView btn_back;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_search_upload);\r\n        init();\r\n        renewlist();\r\n\r\n        edit_search.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                search = edit_search.getText().toString();\r\n                renewlist();\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public void init() {\r\n        recyclerView = findViewById(R.id.recycler_search_upload);\r\n        manager = new LinearLayoutManager(SearchActivity_upload.this, LinearLayoutManager.VERTICAL, false);\r\n        recyclerView.setLayoutManager(manager);\r\n        edit_search = findViewById(R.id.edit_search);\r\n\r\n        btn_back = findViewById(R.id.btn_back_search_upload);\r\n        btn_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        recyclerView.addOnItemTouchListener(new RecyclerViewOnItemClickListener(getApplicationContext(), recyclerView, new RecyclerViewOnItemClickListener.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(View v, int position) {\r\n                String code = arr.get(position).getCode();\r\n                String name = arr.get(position).getName();\r\n                String address = arr.get(position).getAddress();\r\n                Intent data = new Intent();\r\n                data.putExtra(\"code\", code);\r\n                data.putExtra(\"name\", name);\r\n                data.putExtra(\"address\", address);\r\n                setResult(RESULT_OK,data);\r\n                finish();\r\n            }\r\n\r\n            @Override\r\n            public void onItemLongClick(View v, int position) {\r\n\r\n            }\r\n        }));\r\n    }\r\n\r\n    private void renewlist() {\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                arr = new ArrayList<>();\r\n                readDataFromCsv();\r\n                runOnUiThread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        adapter = new RecyclerViewAdapter_Search(getApplicationContext(), arr);\r\n                        recyclerView.setAdapter(adapter);\r\n                        adapter.notifyDataSetChanged();\r\n                    }\r\n                });\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    private void readDataFromCsv() {\r\n        InputStreamReader is = new InputStreamReader(getResources().openRawResource(R.raw.apartmentname));\r\n        CSVReader reader = new CSVReader(is);\r\n        List<String[]> list = null;\r\n        try {\r\n            list = reader.readAll();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                is.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        if (arr.size() != 0) {\r\n            arr.clear();\r\n        }\r\n        Log.d(\"after_clear\", arr.size() + \"\");\r\n\r\n        for (String[] str : list) {\r\n\r\n            item_search_name entity = new item_search_name();\r\n            entity.setCode(str[0]);\r\n            entity.setName(str[1]);\r\n            entity.setAddress(str[2]);\r\n\r\n            if (search != null) {\r\n                int start = entity.getName().indexOf(search);\r\n                if (start!=-1) {  // 검색어가 포함된 경우\r\n                    entity.setStart(start);\r\n                    entity.setEnd(search.length()+start);\r\n                    arr.add(entity);\r\n                }\r\n            } else {\r\n                adapter = null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/SearchActivity_upload.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/SearchActivity_upload.java	(date 1627283861878)
@@ -143,14 +143,14 @@
             entity.setAddress(str[2]);
 
             if (search != null) {
-                int start = entity.getName().indexOf(search);
+                int start = entity.getName().indexOf(search); //entity 이름에서 search가 처음 등장하는 idx 반환
                 if (start!=-1) {  // 검색어가 포함된 경우
                     entity.setStart(start);
                     entity.setEnd(search.length()+start);
-                    arr.add(entity);
+                    arr.add(entity); //entity 이름이 search를 포함하기 때문에 arr에 추가
                 }
             } else {
-                adapter = null;
+                adapter = null; //검색하는 것이 없다면 adapter을 null로 만드나??
             }
         }
     }
Index: app/src/main/java/com/example/publicdatacompetition/SettingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.LinearLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class SettingActivity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    private LinearLayout ll_chat, ll_logout;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_setting);\r\n\r\n        ll_logout = findViewById(R.id.ll_logout);\r\n        ll_chat = findViewById(R.id.ll_chatting);\r\n\r\n        ll_logout.setOnClickListener(this);\r\n        ll_chat.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.ll_logout:\r\n                FirebaseAuth.getInstance().signOut();\r\n                startActivity(new Intent(SettingActivity.this, LoginActivity.class).setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));\r\n                break;\r\n\r\n            case R.id.ll_chatting:\r\n                Intent intent = new Intent(SettingActivity.this, ChatActivity.class);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                startActivity(intent);\r\n                break;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/SettingActivity.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/SettingActivity.java	(date 1627293744434)
@@ -34,7 +34,7 @@
                 break;
 
             case R.id.ll_chatting:
-                Intent intent = new Intent(SettingActivity.this, ChatActivity.class);
+                Intent intent = new Intent(SettingActivity.this, ChatListActivity.class);
                 intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                 startActivity(intent);
                 break;
Index: app/src/main/java/com/example/publicdatacompetition/Adapter/MessageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition.Adapter;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.publicdatacompetition.Model.Chat;\r\nimport com.example.publicdatacompetition.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\nimport java.util.List;\r\n\r\npublic class MessageAdapter extends RecyclerView.Adapter<MessageAdapter.ViewHolder> {\r\n\r\n    public static final int MSG_TYPE_LEFT = 0;\r\n    public static final int MSG_TYPE_RIGHT = 1;\r\n\r\n    private Context mContext;\r\n    private List<Chat> mChat;\r\n    private String imageurl;\r\n\r\n    FirebaseUser fuser;\r\n\r\n    public MessageAdapter(Context mContext, List<Chat> mChat, String imageurl){\r\n        this.mContext = mContext;\r\n        this.mChat = mChat;\r\n        this.imageurl = imageurl;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public MessageAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        if(viewType == MSG_TYPE_LEFT) {\r\n            View view = LayoutInflater.from(mContext).inflate(R.layout.chat_item_left, parent, false);\r\n            return new MessageAdapter.ViewHolder(view);\r\n        } else {\r\n            View view = LayoutInflater.from(mContext).inflate(R.layout.chat_item_right, parent, false);\r\n            return new MessageAdapter.ViewHolder(view);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull MessageAdapter.ViewHolder holder, int position) {\r\n        Chat chat = mChat.get(position);\r\n\r\n        holder.show_message.setText(chat.getMessage());\r\n        if(imageurl.equals(\"default\")) {\r\n            holder.profile_image.setImageResource(R.drawable.preview);\r\n        } else {\r\n            Glide.with(mContext).load(imageurl).into(holder.profile_image);\r\n        }\r\n\r\n        if(!chat.isIsseen()) {\r\n            holder.txt_seen.setText(\"1\");\r\n        } else {\r\n            holder.txt_seen.setText(\"\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mChat.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        public TextView show_message;\r\n        public ImageView profile_image;\r\n        public TextView txt_seen;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            show_message = itemView.findViewById(R.id.show_message);\r\n            profile_image = itemView.findViewById(R.id.profile_image);\r\n            txt_seen = itemView.findViewById(R.id.txt_seen);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        fuser = FirebaseAuth.getInstance().getCurrentUser();\r\n        if(mChat.get(position).getSender().equals(fuser.getUid())){\r\n            return MSG_TYPE_RIGHT;\r\n        } else{\r\n            return MSG_TYPE_LEFT;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/Adapter/MessageAdapter.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/Adapter/MessageAdapter.java	(date 1627299525940)
@@ -39,10 +39,10 @@
     @Override
     public MessageAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         if(viewType == MSG_TYPE_LEFT) {
-            View view = LayoutInflater.from(mContext).inflate(R.layout.chat_item_left, parent, false);
+            View view = LayoutInflater.from(mContext).inflate(R.layout.item_chat_left, parent, false);
             return new MessageAdapter.ViewHolder(view);
         } else {
-            View view = LayoutInflater.from(mContext).inflate(R.layout.chat_item_right, parent, false);
+            View view = LayoutInflater.from(mContext).inflate(R.layout.item_chat_right, parent, false);
             return new MessageAdapter.ViewHolder(view);
         }
     }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.publicdatacompetition\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.3.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    implementation 'com.appunity.retrofit2:converter-gson:2.0.2'\r\n    implementation 'com.appunity.retrofit2:retrofit:2.0.2'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'com.rengwuxian.materialedittext:library:2.1.4'\r\n\r\n    implementation \"com.github.edsergeev:text-fab:1.0.0\"\r\n    implementation 'me.relex:circleindicator:1.2.2'\r\n    implementation 'com.google.android.gms:play-services-location:18.0.0'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.1'\r\n    implementation 'com.android.support:design:30.0.0'\r\n    implementation 'de.hdodenhof:circleimageview:2.2.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.8.0'\r\n    implementation group: 'com.opencsv', name: 'opencsv', version: '4.6'\r\n\r\n    //firebase\r\n    implementation 'com.google.firebase:firebase-auth:21.0.1'\r\n    implementation 'com.google.firebase:firebase-database:20.0.0'\r\n    implementation 'com.google.firebase:firebase-analytics:19.0.0'\r\n    implementation 'com.google.firebase:firebase-storage:20.0.0'\r\n    implementation 'com.google.firebase:firebase-messaging:22.0.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/build.gradle	(date 1627282545093)
@@ -57,4 +57,6 @@
     implementation 'com.google.firebase:firebase-analytics:19.0.0'
     implementation 'com.google.firebase:firebase-storage:20.0.0'
     implementation 'com.google.firebase:firebase-messaging:22.0.0'
+
+    implementation group: 'com.opencsv', name: 'opencsv', version: '4.4'
 }
\ No newline at end of file
Index: app/src/main/java/com/example/publicdatacompetition/ChatListActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/ChatListActivity.java	(date 1627298460103)
+++ app/src/main/java/com/example/publicdatacompetition/ChatListActivity.java	(date 1627298460103)
@@ -0,0 +1,98 @@
+package com.example.publicdatacompetition;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.os.Bundle;
+
+import com.example.publicdatacompetition.Adapter.ChatListAdapter;
+import com.example.publicdatacompetition.Model.Chatlist;
+import com.example.publicdatacompetition.Model.Chatter;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class ChatListActivity extends AppCompatActivity {
+
+    private RecyclerView recyclerView;
+
+    private ChatListAdapter mChatListAdapter;
+    private List<Chatter> mChatters;
+
+    private List<Chatlist> usersList;
+
+    private FirebaseUser fuser;
+    private DatabaseReference reference;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_chat_list);
+
+        recyclerView = findViewById(R.id.recycler_view);
+        recyclerView.setHasFixedSize(true);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));
+
+        fuser = FirebaseAuth.getInstance().getCurrentUser();
+
+        usersList = new ArrayList<>();
+
+        //fuser과 채팅한 사람들의 목록 불러오기
+        reference = FirebaseDatabase.getInstance().getReference("Chatlist").child(fuser.getUid());
+        reference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                usersList.clear();
+
+                for(DataSnapshot dataSnapshot : snapshot.getChildren()){
+                    Chatlist chatlist = dataSnapshot.getValue(Chatlist.class);
+                    usersList.add(chatlist);
+                }
+
+                chatList();
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+    }
+
+    //usersList에 있는 User 정보 가져온 후 RecyclerView Adapter에 넘겨주기
+    private void chatList() {
+        mChatters = new ArrayList<>();
+
+        reference = FirebaseDatabase.getInstance().getReference("Users");
+        reference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                mChatters.clear();
+                for(DataSnapshot dataSnapshot : snapshot.getChildren()) {
+                    Chatter chatter = dataSnapshot.getValue(Chatter.class);
+                    for(Chatlist chatlist : usersList) {
+                        if(chatter.getId().equals(chatlist.getId())) {
+                            mChatters.add(chatter);
+                        }
+                    }
+                }
+                ChatListAdapter chatListAdapter = new ChatListAdapter(getApplicationContext(), mChatters);
+                recyclerView.setAdapter(chatListAdapter);
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/publicdatacompetition/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.publicdatacompetition.Adapter.UserAdapter;\r\nimport com.example.publicdatacompetition.Model.Chatlist;\r\nimport com.example.publicdatacompetition.Model.User;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ChatActivity extends AppCompatActivity {\r\n\r\n    private RecyclerView recyclerView;\r\n\r\n    private UserAdapter userAdapter;\r\n    private List<User> mUsers;\r\n\r\n    private List<Chatlist> usersList;\r\n\r\n    private FirebaseUser fuser;\r\n    private DatabaseReference reference;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_chat);\r\n\r\n        recyclerView = findViewById(R.id.recycler_view);\r\n        recyclerView.setHasFixedSize(true);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));\r\n\r\n        fuser = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        usersList = new ArrayList<>();\r\n\r\n        //fuser과 채팅한 사람들의 목록 불러오기\r\n        reference = FirebaseDatabase.getInstance().getReference(\"Chatlist\").child(fuser.getUid());\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                usersList.clear();\r\n\r\n                for(DataSnapshot dataSnapshot : snapshot.getChildren()){\r\n                    Chatlist chatlist = dataSnapshot.getValue(Chatlist.class);\r\n                    usersList.add(chatlist);\r\n                }\r\n\r\n                chatList();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    //usersList에 있는 User 정보 가져온 후 RecyclerView Adapter에 넘겨주기\r\n    private void chatList() {\r\n        mUsers = new ArrayList<>();\r\n\r\n        reference = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                mUsers.clear();\r\n                for(DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                    User user = dataSnapshot.getValue(User.class);\r\n                    for(Chatlist chatlist : usersList) {\r\n                        if(user.getId().equals(chatlist.getId())) {\r\n                            mUsers.add(user);\r\n                        }\r\n                    }\r\n                }\r\n                UserAdapter userAdapter = new UserAdapter(getApplicationContext(), mUsers);\r\n                recyclerView.setAdapter(userAdapter);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/ChatActivity.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/ChatActivity.java	(date 1627298460078)
@@ -2,17 +2,22 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import android.content.Intent;
 import android.os.Bundle;
-import android.view.LayoutInflater;
 import android.view.View;
-import android.view.ViewGroup;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.TextView;
+import android.widget.Toast;
 
-import com.example.publicdatacompetition.Adapter.UserAdapter;
-import com.example.publicdatacompetition.Model.Chatlist;
-import com.example.publicdatacompetition.Model.User;
+import com.bumptech.glide.Glide;
+import com.example.publicdatacompetition.Adapter.MessageAdapter;
+import com.example.publicdatacompetition.Model.Chat;
+import com.example.publicdatacompetition.Model.Chatter;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
 import com.google.firebase.database.DataSnapshot;
@@ -22,46 +27,165 @@
 import com.google.firebase.database.ValueEventListener;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 
+import de.hdodenhof.circleimageview.CircleImageView;
+
 public class ChatActivity extends AppCompatActivity {
 
+    private CircleImageView profile_image;
+    private TextView username;
+    private EditText text_send;
+    private ImageButton btn_send;
+
+    private String userid;
+
     private RecyclerView recyclerView;
 
-    private UserAdapter userAdapter;
-    private List<User> mUsers;
-
-    private List<Chatlist> usersList;
-
     private FirebaseUser fuser;
     private DatabaseReference reference;
 
+    private Intent intent;
+
+    private List<Chat> mchat;
+
+    private ValueEventListener seenListener;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_chat);
 
-        recyclerView = findViewById(R.id.recycler_view);
+        Toolbar toolbar = findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setTitle("");
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                startActivity(new Intent(ChatActivity.this, ChatListActivity.class).setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));
+            }
+        });
+
+        recyclerView = findViewById(R.id.recyelr_view);
         recyclerView.setHasFixedSize(true);
-        recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));
+        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getApplicationContext());
+        linearLayoutManager.setStackFromEnd(true);
+        recyclerView.setLayoutManager(linearLayoutManager);
 
+        profile_image = findViewById(R.id.profile_image);
+        username = findViewById(R.id.username);
+        text_send = findViewById(R.id.text_send);
+        btn_send = findViewById(R.id.btn_send);
+
+        intent = getIntent();
+        userid = intent.getStringExtra("userid");
         fuser = FirebaseAuth.getInstance().getCurrentUser();
 
-        usersList = new ArrayList<>();
+        btn_send.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String msg = text_send.getText().toString();
+                if(!msg.equals("")){
+                    sendMessage(fuser.getUid(), userid, msg);
+                } else{
+                    Toast.makeText(ChatActivity.this, "메세지를 입력해주세요", Toast.LENGTH_SHORT).show();
+                }
+                text_send.setText("");
+            }
+        });
 
-        //fuser과 채팅한 사람들의 목록 불러오기
-        reference = FirebaseDatabase.getInstance().getReference("Chatlist").child(fuser.getUid());
+        reference = FirebaseDatabase.getInstance().getReference("Users").child(userid);
+
         reference.addValueEventListener(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                usersList.clear();
-
-                for(DataSnapshot dataSnapshot : snapshot.getChildren()){
-                    Chatlist chatlist = dataSnapshot.getValue(Chatlist.class);
-                    usersList.add(chatlist);
+                Chatter chatter = snapshot.getValue(Chatter.class);
+                username.setText(chatter.getUsername());
+                if(chatter.getImageURL().equals("default")) {
+                    profile_image.setImageResource(R.drawable.preview);
+                } else {
+                    Glide.with(getApplicationContext()).load(chatter.getImageURL()).into(profile_image);
+                }
+
+                readMessage(fuser.getUid(), userid, chatter.getImageURL());
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+
+        seenMessage(userid);
+    }
+
+    private void seenMessage(String userid) {
+
+        reference = FirebaseDatabase.getInstance().getReference("Chats");
+        seenListener = reference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                for(DataSnapshot dataSnapshot : snapshot.getChildren()) {
+                    Chat chat = dataSnapshot.getValue(Chat.class);
+
+                    if(chat.getReceiver().equals(fuser.getUid()) && chat.getSender().equals(userid)) {
+                        HashMap<String, Object> hashMap = new HashMap<>();
+                        hashMap.put("isseen", true);
+                        dataSnapshot.getRef().updateChildren(hashMap);
+                    }
                 }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+    }
+
+    private void sendMessage(String sender, String receiver, String message){
+
+        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
+
+        HashMap<String, Object> hashMap = new HashMap<>();
+        hashMap.put("sender", sender);
+        hashMap.put("receiver", receiver);
+        hashMap.put("message", message);
+        hashMap.put("isseen", false);
+
+        reference.child("Chats").push().setValue(hashMap);
+
+        //add user to chat fragment
+         final DatabaseReference chatRef = FirebaseDatabase.getInstance().getReference("Chatlist")
+                .child(fuser.getUid())
+                .child(userid);
+
+        chatRef.addListenerForSingleValueEvent(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                if(!snapshot.exists()) {
+                    chatRef.child("id").setValue(userid);
+                }
+            }
 
-                chatList();
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+
+        final DatabaseReference chatRefRev = FirebaseDatabase.getInstance().getReference("Chatlist")
+                .child(userid)
+                .child(fuser.getUid());
+
+        chatRefRev.addListenerForSingleValueEvent(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                if(!snapshot.exists()) {
+                    chatRefRev.child("id").setValue(fuser.getUid());
+                }
             }
 
             @Override
@@ -71,25 +195,25 @@
         });
     }
 
-    //usersList에 있는 User 정보 가져온 후 RecyclerView Adapter에 넘겨주기
-    private void chatList() {
-        mUsers = new ArrayList<>();
+    private void readMessage(final String myid, final String userid, final String imageurl){
+        mchat = new ArrayList<>();
 
-        reference = FirebaseDatabase.getInstance().getReference("Users");
+        reference = FirebaseDatabase.getInstance().getReference("Chats");
+
         reference.addValueEventListener(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                mUsers.clear();
-                for(DataSnapshot dataSnapshot : snapshot.getChildren()) {
-                    User user = dataSnapshot.getValue(User.class);
-                    for(Chatlist chatlist : usersList) {
-                        if(user.getId().equals(chatlist.getId())) {
-                            mUsers.add(user);
-                        }
+                mchat.clear();
+                for(DataSnapshot dataSnapshot : snapshot.getChildren()){
+                    Chat chat = dataSnapshot.getValue(Chat.class);
+                    if(chat.getReceiver().equals(myid) && chat.getSender().equals(userid) ||
+                            chat.getReceiver().equals(userid) && chat.getSender().equals(myid)) {
+                        mchat.add(chat);
                     }
+
+                    MessageAdapter messageAdapter = new MessageAdapter(ChatActivity.this, mchat, imageurl);
+                    recyclerView.setAdapter(messageAdapter);
                 }
-                UserAdapter userAdapter = new UserAdapter(getApplicationContext(), mUsers);
-                recyclerView.setAdapter(userAdapter);
             }
 
             @Override
@@ -98,4 +222,27 @@
             }
         });
     }
+
+    private void status(String status){
+
+        reference = FirebaseDatabase.getInstance().getReference("Users").child(fuser.getUid());
+
+        HashMap<String, Object> hashMap = new HashMap<>();
+        hashMap.put("status", status);
+
+        reference.updateChildren(hashMap);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        status("online");
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        reference.removeEventListener(seenListener);
+        status("offline");
+    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_chat_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_chat_list.xml	(date 1627293744362)
+++ app/src/main/res/layout/activity_chat_list.xml	(date 1627293744362)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ChatListActivity">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/chat_list_appbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <androidx.appcompat.widget.Toolbar
+            android:layout_width="match_parent"
+            android:layout_height="47dp"
+            android:background="@android:color/white"
+            android:backgroundTint="@android:color/white"
+            app:layout_scrollFlags="scroll|enterAlways">
+
+            <LinearLayout
+                android:orientation="horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="20dp">
+
+                <ImageView
+                    android:id="@+id/chat_list_btn_back"
+                    android:layout_width="25dp"
+                    android:layout_height="25dp"
+                    android:layout_gravity="center_vertical"
+                    android:scaleType="fitXY"
+                    app:srcCompat="@drawable/icon_back" />
+
+                <TextView
+                    android:id="@+id/chat_list_con_titles"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1.0"
+                    android:layout_marginLeft="10dp"
+                    android:layout_gravity="center"
+                    android:text="@string/chat_list_title"
+                    android:textAlignment="center"
+                    android:textSize="18dp"
+                    android:textColor="#000000"
+                    android:ellipsize="end"
+                    android:fontFamily="@font/applesdgothicneob"
+                    android:maxLines="1"/>
+
+                <ImageView
+                    android:id="@+id/chat_list_search"
+                    android:layout_gravity="center|right"
+                    android:layout_width="20dp"
+                    android:layout_height="20dp"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginRight="24dp"
+                    app:srcCompat="@drawable/icon_search" />
+
+            </LinearLayout>
+        </androidx.appcompat.widget.Toolbar>
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/chat_list_appbar"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ChatActivity\">\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recycler_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"/>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_chat.xml	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/res/layout/activity_chat.xml	(date 1627293744341)
@@ -1,16 +1,151 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     tools:context=".ChatActivity">
 
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/chat_list_appbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <androidx.appcompat.widget.Toolbar
+            android:layout_width="match_parent"
+            android:layout_height="47dp"
+            android:background="@android:color/white"
+            android:backgroundTint="@android:color/white"
+            app:layout_scrollFlags="scroll|enterAlways">
+
+            <LinearLayout
+                android:orientation="horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="20dp">
+
+                <ImageView
+                    android:id="@+id/broker_list_btn_back"
+                    android:layout_width="25dp"
+                    android:layout_height="25dp"
+                    android:layout_gravity="center_vertical"
+                    android:scaleType="fitXY"
+                    app:srcCompat="@drawable/icon_back" />
+
+                <TextView
+                    android:id="@+id/broker_list_con_titles"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1.0"
+                    android:layout_marginLeft="10dp"
+                    android:layout_gravity="center"
+                    android:text="@string/chat_list_title"
+                    android:textAlignment="center"
+                    android:textSize="18dp"
+                    android:textColor="#000000"
+                    android:ellipsize="end"
+                    android:fontFamily="@font/applesdgothicneob"
+                    android:maxLines="1"/>
+
+                <ImageView
+                    android:id="@+id/broker_list_search"
+                    android:layout_gravity="center|right"
+                    android:visibility="invisible"
+                    android:layout_width="20.0dip"
+                    android:layout_height="20.0dip"
+                    android:layout_marginLeft="10.0dip"
+                    android:layout_marginRight="20.0dip"
+                    app:srcCompat="@drawable/icon_search" />
+
+            </LinearLayout>
+        </androidx.appcompat.widget.Toolbar>
+    </com.google.android.material.appbar.AppBarLayout>    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/chat_list_appbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <androidx.appcompat.widget.Toolbar
+            android:layout_width="match_parent"
+            android:layout_height="47dp"
+            android:background="@android:color/white"
+            android:backgroundTint="@android:color/white"
+            app:layout_scrollFlags="scroll|enterAlways">
+
+            <LinearLayout
+                android:orientation="horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="20dp">
+
+                <ImageView
+                    android:id="@+id/broker_list_btn_back"
+                    android:layout_width="25dp"
+                    android:layout_height="25dp"
+                    android:layout_gravity="center_vertical"
+                    android:scaleType="fitXY"
+                    app:srcCompat="@drawable/icon_back" />
+
+                <TextView
+                    android:id="@+id/broker_list_con_titles"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1.0"
+                    android:layout_marginLeft="10dp"
+                    android:layout_gravity="center"
+                    android:text="@string/chat_list_title"
+                    android:textAlignment="center"
+                    android:textSize="18dp"
+                    android:textColor="#000000"
+                    android:ellipsize="end"
+                    android:fontFamily="@font/applesdgothicneob"
+                    android:maxLines="1"/>
+
+                <ImageView
+                    android:id="@+id/broker_list_search"
+                    android:layout_gravity="center|right"
+                    android:visibility="invisible"
+                    android:layout_width="20.0dip"
+                    android:layout_height="20.0dip"
+                    android:layout_marginLeft="10.0dip"
+                    android:layout_marginRight="20.0dip"
+                    app:srcCompat="@drawable/icon_search" />
+
+            </LinearLayout>
+        </androidx.appcompat.widget.Toolbar>
+    </com.google.android.material.appbar.AppBarLayout>
+
     <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/recycler_view"
+        android:id="@+id/recyelr_view"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        app:layout_constraintLeft_toLeftOf="parent"
-        app:layout_constraintTop_toTopOf="parent"/>
+        android:layout_below="@id/chat_list_appbar"
+        android:layout_above="@id/bottom"/>
+
+    <RelativeLayout
+        android:id="@+id/bottom"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="5dp"
+        android:background="#fff"
+        android:layout_alignParentBottom="true">
+
+        <EditText
+            android:id="@+id/text_send"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_toLeftOf="@id/btn_send"
+            android:layout_centerVertical="true"
+            android:background="@android:color/transparent"
+            android:hint="Type a message..."/>
+
+        <ImageButton
+            android:id="@+id/btn_send"
+            android:layout_width="50dp"
+            android:layout_height="50dp"
+            android:layout_alignParentRight="true"
+            android:background="@drawable/send"/>
+
+    </RelativeLayout>
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Public Data Competition</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/res/values/strings.xml	(date 1627293744508)
@@ -1,3 +1,6 @@
 <resources>
     <string name="app_name">Public Data Competition</string>
+
+    //activity_chat_list.xml
+    <string name="chat_list_title">채팅 목록</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#6200EE</color>\r\n    <color name=\"colorPrimaryDark\">#3700B3</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n    <color name=\"purple_200\">#FFBB86FC</color>\r\n    <color name=\"purple_500\">#FF6200EE</color>\r\n    <color name=\"purple_700\">#FF3700B3</color>\r\n    <color name=\"teal_200\">#FF03DAC5</color>\r\n    <color name=\"teal_700\">#FF018786</color>\r\n    <color name=\"black\">#FF000000</color>\r\n    <color name=\"white\">#FFFFFFFF</color>\r\n    <color name=\"custom_blue\">#2265DA</color>\r\n    <color name=\"custom_skyblue\">#C4E8FA</color>\r\n    <color name=\"custom_blue2\">#DDE7F8</color>\r\n    <color name=\"cursorColor\">#49654C</color>\r\n    <color name=\"ligthgray\">#6BCBCFBA</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/res/values/colors.xml	(date 1627296654892)
@@ -15,4 +15,10 @@
     <color name="custom_blue2">#DDE7F8</color>
     <color name="cursorColor">#49654C</color>
     <color name="ligthgray">#6BCBCFBA</color>
+
+    <color name="text_black">#1B1B1B</color>
+    <color name="text_gray">#6B1B1B1B</color>
+    <color name="text_white">#FAFAFA</color>
+
+    <color name="dark_gray">#676767</color>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/publicdatacompetition/ListActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.publicdatacompetition;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport okhttp3.ResponseBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class ListActivity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    private RecyclerView mRecyclerView;\r\n    private LinearLayoutManager mManager;\r\n    private String mSido;\r\n    private String mSigungu;\r\n    private String mSearch;\r\n    private String mSubject;\r\n    private FloatingActionButton mToMap, mToTop;\r\n    private Button mRegionButton, mSearchButton;\r\n    private ImageView mBackButton, mFilterButton;\r\n    private TextView mItemCount, mToolbarTitle;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_list);\r\n\r\n        init();\r\n        addScrollListenerOnRecyclerView();\r\n        addItemTouchListenerOnRecyclerView();\r\n        getDataFromServer();\r\n    }\r\n\r\n    // when user scroll recycler\r\n    private void addScrollListenerOnRecyclerView() {\r\n        mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrolled(final RecyclerView recyclerView, int dx, int dy) {\r\n                super.onScrolled(recyclerView, dx, dy);\r\n                int firstVisibleItem = mManager.findFirstVisibleItemPosition();\r\n\r\n                if (firstVisibleItem > 1) {\r\n                    mToTop.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    mToTop.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // when user touch item\r\n    private void addItemTouchListenerOnRecyclerView() {\r\n        mRecyclerView.addOnItemTouchListener(new RecyclerViewOnItemClickListener(getApplicationContext(), mRecyclerView,\r\n                new RecyclerViewOnItemClickListener.OnItemClickListener() {\r\n                    @Override\r\n                    public void onItemClick(View v, int position) {\r\n                        Intent intent = new Intent(getApplicationContext(), HouseInfoActivity.class);\r\n                        startActivity(intent);\r\n                        overridePendingTransition(R.anim.fadein, R.anim.fadeout);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onItemLongClick(View v, int position) {\r\n\r\n                    }\r\n                }));\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.fb_tomap:\r\n                Intent intent1 = new Intent(getApplicationContext(), MapActivity.class);\r\n                intent1.putExtra(\"search\", mSearch);\r\n                intent1.putExtra(\"subject\", mSubject);\r\n                startActivity(intent1);\r\n                overridePendingTransition(R.anim.fadein, R.anim.fadeout);\r\n                break;\r\n            case R.id.btn_list_region:\r\n                Intent intent = new Intent(getApplicationContext(), SidoActivity.class);\r\n                intent.putExtra(\"search\", mSearch);\r\n                intent.putExtra(\"subject\", mSubject);\r\n                startActivity(intent);\r\n                overridePendingTransition(R.anim.fadein, R.anim.fadeout);\r\n                break;\r\n            case R.id.btn_list_back:\r\n                onBackPressed();\r\n                overridePendingTransition(R.anim.fadein, R.anim.fadeout);\r\n                break;\r\n            case R.id.iv_list_filter:\r\n                Intent intent2 = new Intent(getApplicationContext(), FilterActivity.class);\r\n                intent2.putExtra(\"search\", mSearch);\r\n                intent2.putExtra(\"subject\", mSubject);\r\n                startActivity(intent2);\r\n                break;\r\n            case R.id.btn_list_search:\r\n                Intent intent3 = new Intent(getApplicationContext(), SearchActivity.class);\r\n                intent3.putExtra(\"Imfrom\", \"recyclerview\");\r\n                intent3.putExtra(\"subject\", mSubject);\r\n                startActivity(intent3);\r\n                overridePendingTransition(R.anim.fadein, R.anim.fadeout);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void init() {\r\n        mManager = new LinearLayoutManager(ListActivity.this, LinearLayoutManager.VERTICAL, false);\r\n\r\n        mRecyclerView = findViewById(R.id.recyclerview_list);\r\n        mToMap = findViewById(R.id.fb_tomap);\r\n        mToTop = findViewById(R.id.fb_totop);\r\n        mRegionButton = findViewById(R.id.btn_list_region);\r\n        mSearchButton = findViewById(R.id.btn_list_search);\r\n        mBackButton = findViewById(R.id.btn_list_back);\r\n        mFilterButton = findViewById(R.id.iv_list_filter);\r\n        mItemCount = findViewById(R.id.tv_list_itemcount);\r\n        mToolbarTitle = findViewById(R.id.tv_list_title);\r\n\r\n        mRecyclerView.setLayoutManager(mManager);\r\n        mToMap.setOnClickListener(this);\r\n        mToTop.setOnClickListener(this);\r\n        mRegionButton.setOnClickListener(this);\r\n        mSearchButton.setOnClickListener(this);\r\n        mBackButton.setOnClickListener(this);\r\n        mFilterButton.setOnClickListener(this);\r\n\r\n        mSido = MyLocation.getInstance().getSIDO();\r\n        mSigungu = MyLocation.getInstance().getSIGUNGU();\r\n        mSubject = getIntent().getStringExtra(\"subject\");\r\n        mSearch = getIntent().getStringExtra(\"search\");\r\n\r\n        setToolbarTitle();\r\n    }\r\n\r\n    private void setToolbarTitle() {\r\n        mToolbarTitle.setText(mSubject);\r\n\r\n        String name;\r\n        if (mSido.length() == 4) {\r\n            name = \"\" + mSido.charAt(0) + mSido.charAt(2);\r\n        } else {\r\n            name = mSido.substring(0, 2);\r\n        }\r\n        if (mSido != null && mSigungu != null) {\r\n            mRegionButton.setText(\" \" + name + \" - \" + mSigungu + \" \");\r\n        }\r\n    }\r\n\r\n    private void getDataFromServer() {\r\n        // TODO: 2021-07-23 connect retrofit\r\n        RESTApi mRESTApi = RESTApi.retrofit.create(RESTApi.class);\r\n        mRESTApi.getList().enqueue(new Callback<List<PermittedHouse>>() {\r\n            @Override\r\n            public void onResponse(Call<List<PermittedHouse>> call, Response<List<PermittedHouse>> response) {\r\n                List<PermittedHouse> Result = (List<PermittedHouse>) response.body();\r\n                ArrayList<PermittedHouse> PermittedList = (ArrayList) Result;\r\n                mItemCount.setText(PermittedList.size() + \"채의 집을 구경하세요\");\r\n                Log.d(\"PermittedList\", String.valueOf(PermittedList.get(0)));\r\n                Log.d(\"PermittedList\", PermittedList.get(0).getResidence_name());\r\n                Log.d(\"PermittedList\", \"\" + PermittedList.get(0).getTitleImg());\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<PermittedHouse>> call, Throwable throwable) {\r\n                Log.d(\"ListActivity 통신 실패\", \"\");\r\n            }\r\n        });\r\n\r\n\r\n        // TODO: 2021-07-23 connect adapter on another thread\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n//                arr = new ArrayList<>();\r\n//                getcode();\r\n//                readDataFromCsv();\r\n                runOnUiThread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n//                        if(arr.isEmpty() == false || arr.size() != 0){\r\n//                            Collections.sort(arr,new Filtering_for_ganada());\r\n//                            Tv_cnt.setText(arr.size()+ \"개의 의원을 나열했어요\");\r\n//                            adapter = new CustomAdapter(getApplicationContext(), arr, subject);\r\n//                            recyclerView.setAdapter(adapter);\r\n//                            adapter.notifyDataSetChanged();\r\n//                        }else if(arr.size() == 0){\r\n//                            Tv_cnt.setText(\"검색 결과가 없어요.\");\r\n//                        }\r\n//                        base_progressBar.setVisibility(View.GONE);\r\n                    }\r\n                });\r\n            }\r\n        }).start();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/publicdatacompetition/ListActivity.java	(revision c7193de7e46eb58a9bfd513006d4496367346624)
+++ app/src/main/java/com/example/publicdatacompetition/ListActivity.java	(date 1627286845150)
@@ -1,213 +1,0 @@
-package com.example.publicdatacompetition;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.google.android.material.floatingactionbutton.FloatingActionButton;
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-
-import okhttp3.ResponseBody;
-import retrofit2.Call;
-import retrofit2.Callback;
-import retrofit2.Response;
-
-public class ListActivity extends AppCompatActivity implements View.OnClickListener {
-
-    private RecyclerView mRecyclerView;
-    private LinearLayoutManager mManager;
-    private String mSido;
-    private String mSigungu;
-    private String mSearch;
-    private String mSubject;
-    private FloatingActionButton mToMap, mToTop;
-    private Button mRegionButton, mSearchButton;
-    private ImageView mBackButton, mFilterButton;
-    private TextView mItemCount, mToolbarTitle;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_list);
-
-        init();
-        addScrollListenerOnRecyclerView();
-        addItemTouchListenerOnRecyclerView();
-        getDataFromServer();
-    }
-
-    // when user scroll recycler
-    private void addScrollListenerOnRecyclerView() {
-        mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
-            @Override
-            public void onScrolled(final RecyclerView recyclerView, int dx, int dy) {
-                super.onScrolled(recyclerView, dx, dy);
-                int firstVisibleItem = mManager.findFirstVisibleItemPosition();
-
-                if (firstVisibleItem > 1) {
-                    mToTop.setVisibility(View.VISIBLE);
-                } else {
-                    mToTop.setVisibility(View.GONE);
-                }
-            }
-        });
-    }
-
-    // when user touch item
-    private void addItemTouchListenerOnRecyclerView() {
-        mRecyclerView.addOnItemTouchListener(new RecyclerViewOnItemClickListener(getApplicationContext(), mRecyclerView,
-                new RecyclerViewOnItemClickListener.OnItemClickListener() {
-                    @Override
-                    public void onItemClick(View v, int position) {
-                        Intent intent = new Intent(getApplicationContext(), HouseInfoActivity.class);
-                        startActivity(intent);
-                        overridePendingTransition(R.anim.fadein, R.anim.fadeout);
-                    }
-
-                    @Override
-                    public void onItemLongClick(View v, int position) {
-
-                    }
-                }));
-    }
-
-    @Override
-    public void onClick(View view) {
-        switch (view.getId()) {
-            case R.id.fb_tomap:
-                Intent intent1 = new Intent(getApplicationContext(), MapActivity.class);
-                intent1.putExtra("search", mSearch);
-                intent1.putExtra("subject", mSubject);
-                startActivity(intent1);
-                overridePendingTransition(R.anim.fadein, R.anim.fadeout);
-                break;
-            case R.id.btn_list_region:
-                Intent intent = new Intent(getApplicationContext(), SidoActivity.class);
-                intent.putExtra("search", mSearch);
-                intent.putExtra("subject", mSubject);
-                startActivity(intent);
-                overridePendingTransition(R.anim.fadein, R.anim.fadeout);
-                break;
-            case R.id.btn_list_back:
-                onBackPressed();
-                overridePendingTransition(R.anim.fadein, R.anim.fadeout);
-                break;
-            case R.id.iv_list_filter:
-                Intent intent2 = new Intent(getApplicationContext(), FilterActivity.class);
-                intent2.putExtra("search", mSearch);
-                intent2.putExtra("subject", mSubject);
-                startActivity(intent2);
-                break;
-            case R.id.btn_list_search:
-                Intent intent3 = new Intent(getApplicationContext(), SearchActivity.class);
-                intent3.putExtra("Imfrom", "recyclerview");
-                intent3.putExtra("subject", mSubject);
-                startActivity(intent3);
-                overridePendingTransition(R.anim.fadein, R.anim.fadeout);
-                break;
-        }
-    }
-
-    private void init() {
-        mManager = new LinearLayoutManager(ListActivity.this, LinearLayoutManager.VERTICAL, false);
-
-        mRecyclerView = findViewById(R.id.recyclerview_list);
-        mToMap = findViewById(R.id.fb_tomap);
-        mToTop = findViewById(R.id.fb_totop);
-        mRegionButton = findViewById(R.id.btn_list_region);
-        mSearchButton = findViewById(R.id.btn_list_search);
-        mBackButton = findViewById(R.id.btn_list_back);
-        mFilterButton = findViewById(R.id.iv_list_filter);
-        mItemCount = findViewById(R.id.tv_list_itemcount);
-        mToolbarTitle = findViewById(R.id.tv_list_title);
-
-        mRecyclerView.setLayoutManager(mManager);
-        mToMap.setOnClickListener(this);
-        mToTop.setOnClickListener(this);
-        mRegionButton.setOnClickListener(this);
-        mSearchButton.setOnClickListener(this);
-        mBackButton.setOnClickListener(this);
-        mFilterButton.setOnClickListener(this);
-
-        mSido = MyLocation.getInstance().getSIDO();
-        mSigungu = MyLocation.getInstance().getSIGUNGU();
-        mSubject = getIntent().getStringExtra("subject");
-        mSearch = getIntent().getStringExtra("search");
-
-        setToolbarTitle();
-    }
-
-    private void setToolbarTitle() {
-        mToolbarTitle.setText(mSubject);
-
-        String name;
-        if (mSido.length() == 4) {
-            name = "" + mSido.charAt(0) + mSido.charAt(2);
-        } else {
-            name = mSido.substring(0, 2);
-        }
-        if (mSido != null && mSigungu != null) {
-            mRegionButton.setText(" " + name + " - " + mSigungu + " ");
-        }
-    }
-
-    private void getDataFromServer() {
-        // TODO: 2021-07-23 connect retrofit
-        RESTApi mRESTApi = RESTApi.retrofit.create(RESTApi.class);
-        mRESTApi.getList().enqueue(new Callback<List<PermittedHouse>>() {
-            @Override
-            public void onResponse(Call<List<PermittedHouse>> call, Response<List<PermittedHouse>> response) {
-                List<PermittedHouse> Result = (List<PermittedHouse>) response.body();
-                ArrayList<PermittedHouse> PermittedList = (ArrayList) Result;
-                mItemCount.setText(PermittedList.size() + "채의 집을 구경하세요");
-                Log.d("PermittedList", String.valueOf(PermittedList.get(0)));
-                Log.d("PermittedList", PermittedList.get(0).getResidence_name());
-                Log.d("PermittedList", "" + PermittedList.get(0).getTitleImg());
-            }
-
-            @Override
-            public void onFailure(Call<List<PermittedHouse>> call, Throwable throwable) {
-                Log.d("ListActivity 통신 실패", "");
-            }
-        });
-
-
-        // TODO: 2021-07-23 connect adapter on another thread
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-//                arr = new ArrayList<>();
-//                getcode();
-//                readDataFromCsv();
-                runOnUiThread(new Runnable() {
-                    @Override
-                    public void run() {
-//                        if(arr.isEmpty() == false || arr.size() != 0){
-//                            Collections.sort(arr,new Filtering_for_ganada());
-//                            Tv_cnt.setText(arr.size()+ "개의 의원을 나열했어요");
-//                            adapter = new CustomAdapter(getApplicationContext(), arr, subject);
-//                            recyclerView.setAdapter(adapter);
-//                            adapter.notifyDataSetChanged();
-//                        }else if(arr.size() == 0){
-//                            Tv_cnt.setText("검색 결과가 없어요.");
-//                        }
-//                        base_progressBar.setVisibility(View.GONE);
-                    }
-                });
-            }
-        }).start();
-    }
-}
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-23__6_39__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-23__6_39__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-24__11_19__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-07-24__11_19__Default_Changelist_.xml
diff --git app/src/main/res/layout/chat_item_left.xml app/src/main/res/layout/item_chat_left.xml
rename from app/src/main/res/layout/chat_item_left.xml
rename to app/src/main/res/layout/item_chat_left.xml
diff --git app/src/main/res/layout/chat_item_right.xml app/src/main/res/layout/item_chat_right.xml
rename from app/src/main/res/layout/chat_item_right.xml
rename to app/src/main/res/layout/item_chat_right.xml
